#–Ø –∏—Å–ø–æ–ª—å–∑—É—é —Ç—Ä–µ–¥—ã —á—Ç–æ–±—ã —Ä–æ–±–æ—Ç—ã —Ä–∞–±–æ—Ç–∞–ª–∏ –≤–º–µ—Å—Ç–µ —Å –±–æ—Ç–æ–º –∏ —Ç–∞–π–º–µ—Ä–æ–º, –æ–¥–Ω–∞ –Ω–æ—á—å –¥–ª–∏—Ç—Å–∞ 630 —Å–µ–∫—É–Ω–¥(–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è timer) –Ω–æ —Å–∞–º–∏ –æ–Ω–∏ –ø–æ —Å–µ–±–µ –µ—â–µ –Ω–µ —Å–¥–µ–ª–∞–Ω–Ω—ã.
#—Ç–∞–º –≥–¥–µ —Ä–æ–±–æ—Ç—ã —Å—Ç–æ–∏—Ç –ø—É—Å—Ç–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π. –ù–∞–¥–µ—é—Å—å —Ç—ã —É–º–µ–µ—à—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∫–æ–ª–±–µ–∫–æ–º –∞ –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ –ø–æ—Å–º–æ—Ç—Ä–∏ –∫–æ–ª–±–µ–∫ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ.
#–¢–∞–∫–∂–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∫–æ—Ç–æ—Ä—ã–µ –ø–æ–¥ –±–æ—Ç–æ–º –ø–æ—Ç–æ–º –∏–∑–º–µ–Ω—è—é—Ç—Å—è –≤ —Ñ—É–Ω–∫—Ü–∏—è—Ö. –ö–∞–º–µ—Ä—ã —Ç–∞–∫–∂–µ –Ω–µ —Ä–∞–±–æ—Ç–∞—é—Ç.
#–ò –¥–∞, –ª–æ–≥–∏–∫–∞ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–∞ –∫–∞–∫ db_manager. –¢–∞–∫–∂–µ —Ç–æ —á—Ç–æ –ø–æ–±–µ–¥—ã –∏ –¥–µ–Ω—å–≥–∏ –≤ —Ñ–æ—Ä–º–∞—Ç–µ —Å—Ç—Ä–∏–Ω–≥ —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ, –ø–æ –¥—Ä—É–≥–æ–º—É –∫–æ–¥ –±—É–¥–µ—Ç –ª–æ–º–∞—Ç—å—Å—è.
from random import *
from config import *
from telebot import *
import logic as db_manager
import time, threading, art
bot = TeleBot(TOKEN)
timer = 630 
game_started = False
end = False
@bot.message_handler(commands=["start"])
def start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —è –∏–≥—Ä–æ–≤–æ–π —Ö–æ—Ä—Ä–æ—Ä –±–æ—Ç, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –º–æ–∏ –∫–æ–º–º–∞–Ω–¥—ã –Ω–∞–ø–∏—à–∏ /help.")
@bot.message_handler(commands=["help"])
def help(message):
    bot.reply_to(message, "–ú–æ–∏ –∫–æ–º–º–∞–Ω–¥—ã: /start - —Å—Ç–∞—Ä—Ç, /help - –ø–æ–º–æ—â—å, /menu - –∏–Ω–ª–∞–π–Ω –º–µ–Ω—é.")
@bot.message_handler(commands=["menu"])
def menu(message):
    markup = types.InlineKeyboardMarkup(row_width=1)
    item1 = types.InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å', callback_data='button_game')
    item2 = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='button_profile')
    markup.add(item1,item2)
    bot.send_message(message.chat.id, '–í–æ—Ç –º–µ–Ω—é:', reply_markup=markup)
@bot.callback_query_handler(func=lambda call:True)
def callback(call):
    if call.message:
        if call.data == 'button_game':  
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton('–ö–∞–º–µ—Ä—ãüì∏', callback_data='button_camera')
            item2 = types.InlineKeyboardButton('–ß–∞—Å—ã‚è∞', callback_data='button_clocks')
            item3 = types.InlineKeyboardButton('–õ–µ–≤–∞—è –¥–≤–µ—Ä—åüö™', callback_data='button_left_door')
            item4 = types.InlineKeyboardButton('–ü—Ä–∞–≤–∞—è –¥–≤–µ—Ä—åüö™', callback_data='button_right_door')
            markup.add(item1, item2, item3, item4)
            bot.send_photo(call.message.chat.id, open('./Images/Game/security_room.jpeg', 'rb'))
            bot.send_message(call.message.chat.id, '–í—ã —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å –æ—Ö—Ä–∞–Ω–Ω–∏–∫–æ–º –≤ –±–∞—Ä–µ –≥–¥–µ –Ω–µ–¥–∞–≤–Ω–æ –ø–æ—è–≤–∏–ª–∏—Å—å –ò–ò —Ä–æ–±–æ—Ç—ã, –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –ø–æ—á–µ–º—É –ø–æ—Å–ª–µ –ø–æ—è–≤–ª–µ–Ω–∏—è —Ä–æ–±–æ—Ç–æ–≤ —É –Ω–∏—Ö –ø–æ—è–≤–∏–ª—Å—è —Ç–∞–∫–æ–π —Å–ø—Ä–æ—Å –Ω–∞ –æ—Ö—Ä–∞–Ω—É?\n–í–∞—à–∞ –∑–∞–¥–∞—á–∞, –æ—Ö—Ä–∞–Ω—è—Ç—å –±–∞—Ä –¥–æ 6 —É—Ç—Ä–∞(–±–∞—Ä –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤ —ç—Ç–æ –≤—Ä–µ–º—è), –≤—ã –º–æ–∂–µ—Ç–µ —Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞–º–µ—Ä—ã –∏ –∑–∞–∫—Ä—ã–≤–∞—Ç—å –¥–≤–µ—Ä–∏, –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ 7 –Ω–æ—á–µ–π, –∞ –ø–æ—Ç–æ–º –≤–∞—Å –∑–∞–º–µ–Ω–∏—Ç –Ω–∞ –≤—Ä–µ–º—è –¥—Ä—É–≥–æ–π –æ—Ö—Ä–∞–Ω–Ω–∏–∫, —É–¥–∞—á–∏!', reply_markup=markup)
            time.sleep(10)
            global game_started
            game_started = True
        elif call.data == 'button_profile':
            markup = types.InlineKeyboardMarkup(row_width=5)
            item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='back1')
            bot.send_message(call.message.chat.id, f'–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å:(–ø–µ—Ä–≤–æ–µ —ç—Ç–æ –∏–º—è, –≤—Ç–æ—Ä–æ–µ —ç—Ç–æ –ø–æ–±–µ–¥—ã, –∞ —Ç—Ä–µ—Ç—å–µ —ç—Ç–æ –¥–µ–Ω—å–≥–∏.) {db_manager.show_profile}', reply_markup=markup)
        elif call.data == 'button_camera':
            markup = types.InlineKeyboardMarkup(row_width=3)
            item1 = types.InlineKeyboardButton('–ö–∞–º–µ—Ä–∞üì∑1', callback_data='button_camera1')
            item2 = types.InlineKeyboardButton('–ö–∞–º–µ—Ä–∞üì∑2', callback_data='button_camera2')
            item3 = types.InlineKeyboardButton('–ö–∞–º–µ—Ä–∞üì∑3', callback_data='button_camera3')
            item4 = types.InlineKeyboardButton('–ö–∞–º–µ—Ä–∞üì∑4', callback_data='button_camera4')
            item5 = types.InlineKeyboardButton('–ö–∞–º–µ—Ä–∞üì∑5', callback_data='button_camera5')
            item6 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='back2')
            markup.add(item1, item2, item3, item4, item5, item6) 
            bot.send_photo(call.message.chat.id, open('./Images/Game/cameras_plan.jpeg', 'rb'))
            bot.send_message(call.message.chat.id, '–ö–∞–º–µ—Ä—ã:', reply_markup=markup)
        elif call.data == 'button_clocks':
            markup = types.InlineKeyboardMarkup(row_width=5)
            item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='back2')
            time_now = " "
            if timer <= 630 and timer > 540:
                time_now = "00:00"
            elif timer <= 540 and timer > 450:
                time_now = "01:00"
            elif timer <= 450 and timer > 360:
                time_now = "02:00"
            elif timer <= 360 and timer > 270:
                time_now = "03:00"
            elif timer <= 270 and timer > 180:
                time_now = "04:00"
            elif timer <= 180 and timer > 90:
                time_now = "05:00"
            elif timer <= 90 and timer > 0:
                time_now = "06:00"
            elif timer == 0:
                time_now = "07:00"
            markup.add(item1)
            bot.send_message(call.message.chat.id, f'–°–µ–π—á–∞—Å {time_now} —á–∞—Å–æ–≤', reply_markup=markup)
        elif call.data == "back2":
            markup = types.InlineKeyboardMarkup(row_width=2)
            item1 = types.InlineKeyboardButton('–ö–∞–º–µ—Ä—ãüì∏', callback_data='button_camera')
            item2 = types.InlineKeyboardButton('–ß–∞—Å—ã‚è∞', callback_data='button_clocks')
            item3 = types.InlineKeyboardButton('–õ–µ–≤–∞—è –¥–≤–µ—Ä—åüö™', callback_data='button_left_door')
            item4 = types.InlineKeyboardButton('–ü—Ä–∞–≤–∞—è –¥–≤–µ—Ä—åüö™', callback_data='button_right_door')
            markup.add(item1, item2, item3, item4)
            bot.send_photo(call.message.chat.id, open('./Images/Game/security_room.jpeg', 'rb'), reply_markup=markup)
        elif call.data == "back1":
            markup = types.InlineKeyboardMarkup(row_width=1)
            item1 = types.InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å', callback_data='button_game')
            item2 = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='button_profile')
            markup.add(item1,item2)
            bot.send_message(call.message.chat.id, '–ú–µ–Ω—é:', reply_markup=markup)
    if end == True:
        bot.send_message(call.message.chat.id, f"{art.tprint('7:00 AM')}")
        username = call.message.from_user.username
        db_manager.add_wins(username, "1", "10")
def bot_thread():
    bot.infinity_polling(print("Bot started."), none_stop=True)
def timer_thread():
    global end
    while True:
        timer -= 1
        if timer == 0:
            end = True
            break
def timing_thread(message):
    #
    #
    #
    #
    pass
if __name__ == '__main__':
    polling_thread = threading.Thread(target=bot_thread)
    polling_timer = threading.Thread(target=timer_thread)
    polling_timings = threading.Thread(target=timing_thread)
    polling_thread.start()
    if game_started == True:
        polling_timer.start()
        polling_timings.start()