#–ò–º–ø–æ—Ä—Ç—ã



from random import *
from config import *
from telebot import *
import logic as db_manager
import time, threading



#C–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö



#–°–æ–∑–¥–∞–Ω–∏–µ –±–æ—Ç–∞


bot = TeleBot(TOKEN) 


#–°–æ–∑–¥–∞–Ω–∏–µ —Ç–∞–π–º–µ—Ä–∞


timer = 630 


#–°–æ—Å—Ç–æ—è–Ω–∏–µ –∏–≥—Ä—ã


game_started = False
end = False
night = 1 
end_bad = False


#–†–æ–±–æ—Ç—ã



#–£–±–æ—Ä—â–∏–∫

go_cleaner = False
cleaner_door_right = False
cleaner_door_left = False
cleaner_vine = False
cleaner_guest = False
cleaner_vent = False 
cleaner_storage = True 

#–ü—Å–∏—Ö

go_—Årazy = False 
crazy_door_right = False
crazy_door_left = False
crazy_vine = False
crazy_guest = True
crazy_vent = False 
crazy_storage = False 

#–ë–∞—Ä–º–µ–Ω

go_barmen = False 
barmen_door_right = False
barmen_door_left = False
barmen_vine = True
barmen_guest = False
barmen_vent = False 
barmen_storage = False 

#–•–æ–≤–µ—Ä–±–æ—Ä–¥

go_hoverboard = False 
hover_door_right = True
hover_door_left = False
hover_vine = False
hover_guest = False
hover_vent = False 
hover_storage = False 

#–¢–µ—Ä–º–∏–Ω–∞—Ç–æ—Ä, —Ç—Å—Å—Åü§´

go_terminator = False 
terminator_vent = False 
terminator_fifth_room = True #–ü–æ—è–≤–ª–µ–Ω–∏–µ —Ç–µ—Ä–º–∏–Ω–∞—Ç–æ—Ä–∞ –≤ –∫–æ–º–Ω–∞—Ç–µ, –∫–æ—Ç–æ—Ä–∞—è –∑–∞ –∫–∞–º–µ—Ä–æ–π, –∫–æ—Ç–æ—Ä–∞—è –¥–æ 5-–æ–π –Ω–æ—á–∏ —Å–ª–æ–º–∞–Ω–∞



#–°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–≤–µ—Ä–µ–π –∏ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏



left_door_statement = True #–ë—É–ª–µ–≤–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ª–µ–≤–æ–π –¥–≤–µ—Ä–∏
right_door_statement = True #–ë—É–ª–µ–≤–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∞–≤–æ–π –¥–≤–µ—Ä–∏
ventilation_statement = True #–ë—É–ª–µ–≤–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è, –æ—Ç–≤–µ—á–∞—é—â–∞—è –∑–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏



#–ü–ª–∞–Ω—à–µ—Ç



battery = 4
battery_timer = random.randint(100, 201)
battery_statement = True 
tablet_statement = True



#–¢–∞–π–º–µ—Ä—ã –¥–≤–µ—Ä–µ–π –∏ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏



right_door_timer = 100
left_door_timer = 100
vent_timer = 80




#–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏ –Ω–∞–∂–∞—Ç–∏–π




#–û–±—â–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã


@bot.message_handler(commands=["start"]) #–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def start(message):

    db_manager.add_user(message.from_user.username, '0', '0', 'reg_user') #–í–Ω–æ—Å–∏–º –∏–≥—Ä–æ–∫–∞ –≤ –ë–î

    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç, —è –∏–≥—Ä–æ–≤–æ–π —Ö–æ—Ä—Ä–æ—Ä –±–æ—Ç, —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –º–æ–∏ –∫–æ–º–º–∞–Ω–¥—ã –Ω–∞–ø–∏—à–∏ /help.")


@bot.message_handler(commands=["help"]) #–ü–æ–º–æ—â—å
def help(message):

    bot.reply_to(message, "–ú–æ–∏ –∫–æ–º–º–∞–Ω–¥—ã: /start - —Å—Ç–∞—Ä—Ç, /help - –ø–æ–º–æ—â—å, /menu - –∏–Ω–ª–∞–π–Ω –º–µ–Ω—é.")


@bot.message_handler(commands=["console"]) #–ö–æ–Ω—Å–æ–ª—å (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∞)
def console(message):

    status = db_manager.check_status(message.from_user.username)
    if status == 'admin': #–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–≥—Ä–æ–∫–∞

        bot.reply_to(message, "–ö–æ–º–º–∞–Ω–¥—ã —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞: \n /win - –º–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –ø–æ–±–µ–¥–∞ \n  /kill - –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø—Ä–æ–∏–≥—Ä—ã—à \n /night - –≤—ã–±–æ—Ä –Ω–æ—á–∏")

    else:

        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∞!")


@bot.message_handler(commands=["menu"]) #–ú–µ–Ω—é
def menu(message):

    markup = types.InlineKeyboardMarkup(row_width=2)
    item1 = types.InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å', callback_data='button_game')
    item2 = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='button_profile')
    item3 = types.InlineKeyboardButton('–ë–û–ù–£–°!!!', callback_data='button_bonus')

    if night >= 5:
        markup.add(item1,item2,item3)
    else:
        markup.add(item1,item2)

    bot.send_photo(message.chat.id, open('./Images/Game/menu.jpeg', 'rb'))
    bot.send_message(message.chat.id, '–í–æ—Ç –º–µ–Ω—é:', reply_markup=markup)


#–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∞


@bot.message_handler(commands=["win"]) #–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è –ø–æ–±–µ–¥–∞ 
def win(message):

    global end
    global timer
    global game_started
    global night

    status = db_manager.check_status(message.from_user.username)
    if status == 'admin': #–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–≥—Ä–æ–∫–∞

        end  = True
        timer = 0 
        game_started  = False
        night += 1

        markup = types.InlineKeyboardMarkup(row_width=2)

        if night >= 5:

            item1 = types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='back1')

        else: 

            item1 = types.InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ', callback_data='button_game')

        item2 = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='button_profile')
        markup.add(item1, item2)

        db_manager.update_coins(message.from_user.username, str(int(db_manager.show_coins(message.from_user.username))+3))
        db_manager.update_wins(message.from_user.username, str(int(db_manager.show_wins(message.from_user.username))+1))

        bot.send_photo(message.chat.id, open('./Images/Game/win.jpg', 'rb'))

        if night >= 5:

            bot.send_message(message.chat.id, "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –ø—Ä–æ—à–ª–∏ –∏–≥—Ä—É! –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É –±–æ–Ω—É—Å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.", reply_markup=markup)
        
        else:

            bot.send_message(message.chat.id, "–í—ã –ø–æ–±–µ–¥–∏–ª–∏! –í–∞—à–∞ –∑–∞—Ä–ø–ª–∞—Ç–∞ —Ä–∞–≤–Ω–∞ 3üí∞", reply_markup=markup)

    else:

        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∞!")


@bot.message_handler(commands=["kill"]) #–ú–≥–Ω–æ–≤–µ–Ω–Ω–∞—è —Å–º–µ—Ä—Ç—å 
def kill(message):

    global game_started
    global timer

    status = db_manager.check_status(message.from_user.username)
    if status == 'admin': #–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–≥—Ä–æ–∫–∞

        timer = 0 
        game_started  = False

        markup = types.InlineKeyboardMarkup(row_width=2)
        item1 = types.InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞', callback_data='button_game')
        item2 = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='button_profile')
        markup.add(item1,item2)

        bot.send_photo(message.chat.id, open('./Images/Game/loose.jpg', 'rb'))
        bot.send_message(message.chat.id, "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!", reply_markup=markup)

    else:

        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∞!")


@bot.message_handler(commands=["night"]) #–í—ã–±–æ—Ä –Ω–æ—á–∏ 
def night_set(message):

    global game_started
    global timer
    global admin_night

    status = db_manager.check_status(message.from_user.username)
    if status == 'admin': #–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∏–≥—Ä–æ–∫–∞

        admin_night = True
        timer = 0 
        game_started  = False

        markup = types.InlineKeyboardMarkup(row_width=2)
        for i in range(1, 6):

            s =  'button_game' + '|' + str(i)

            item1 = types.InlineKeyboardButton(f'–ù–æ—á—å {i}', callback_data=s)
            markup.add(item1)

        bot.send_photo(message.chat.id, open('./Images/Game/clocks.jpg', 'rb'))
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ—á—å:", reply_markup=markup)

    else:

        bot.reply_to(message, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∞!")





@bot.callback_query_handler(func=lambda call:True) #–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π
def callback(call): 


    #–î–µ–ª–∞–µ–º –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≥–ª–æ–±–∞–ª—å–Ω—ã–º–∏


    #–£–±–æ—Ä—â–∏–∫ (–º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ)

    global cleaner_door_right
    global cleaner_door_left
    global cleaner_guest
    global cleaner_vine
    global cleaner_storage 
    global cleaner_vent

    #–ü—Å–∏—Ö (–º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ)

    global crazy_door_right 
    global crazy_door_left 
    global crazy_vine 
    global crazy_guest 
    global crazy_vent
    global crazy_storage 
        
    #–ë–∞—Ä–º–µ–Ω (–º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ)

    global barmen_door_right 
    global barmen_door_left 
    global barmen_vine 
    global barmen_guest 
    global barmen_vent  
    global barmen_storage 

    #–•–æ–≤–µ—Ä–±–æ—Ä–¥ (–º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ)

    global hover_door_right 
    global hover_door_left 
    global hover_vine 
    global hover_guest 
    global hover_vent 
    global hover_storage 

    #–¢–µ—Ä–º–∏–Ω–∞—Ç–æ—Ä (–º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ)
    global terminator_vent  
    global terminator_fifth_room 
 
    #–ù–∞—á–∞–ª–æ –∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ

    global game_started
    global end_bad
    global end

    #–ü–ª–∞–Ω—à–µ—Ç

    global battery
    global battery_timer
    global battery_statement
    global tablet_statement

    #–î–≤–µ—Ä–∏ –∏ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏—è (—Å–æ—Å—Ç–æ—è–Ω–∏–µ)

    global left_door_statement
    global right_door_statement
    global ventilation_statement

    #–î–≤–µ—Ä–∏ –∏ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏—è (—Ç–∞–π–º–µ—Ä—ã –Ω–∞ –æ—Ç–∫—Ä—ã—Ç–∏–µ)

    global left_door_timer
    global right_door_timer
    global vent_timer

    #–ü–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏–µ —Ä–æ–±–æ—Ç–æ–≤

    global go_cleaner
    global go_—Årazy 
    global go_barmen
    global go_hoverboard
    global go_terminator

    #–í—Ä–µ–º—è

    global night
    global hour
    global timer


    if call.message: #–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π



        #–ö–Ω–æ–ø–∫–∏ –¥–æ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –≥–µ–π–º–ø–ª–µ—è



        if call.data == 'button_profile': #–ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞

                markup = types.InlineKeyboardMarkup(row_width=5)
                item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='back1')
                markup.add(item1)

                username = call.from_user.username
                profile = db_manager.show_profile(username)

                bot.send_photo(call.message.chat.id, open('./Images/Game/profile.jpeg', 'rb'))
                bot.send_message(call.message.chat.id, f'–í–∞—à –ø—Ä–æ—Ñ–∏–ª—å: \n –ò–º—è {profile[0]} \n –ü–æ–±–µ–¥—ã {profile[1]} \n –î–µ–Ω—å–≥–∏ {profile[2]} \n –°—Ç–∞—Ç—É—Å—ã {profile[3]}', reply_markup=markup)


        elif call.data == "back1": #–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ, –µ—Å–ª–∏ –∏–≥—Ä–æ–∫ –µ—â—ë –Ω–µ –Ω–∞—á–∞–ª –∏–≥—Ä—É

                markup = types.InlineKeyboardMarkup(row_width=2)
                item1 = types.InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å', callback_data='button_game')
                item2 = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='button_profile')
                item3 = types.InlineKeyboardButton('–ë–û–ù–£–°!!!', callback_data='button_bonus')

                if night >= 5:
                    markup.add(item1,item2,item3)
                else:
                    markup.add(item1,item2)

                bot.send_photo(call.message.chat.id, open('./Images/Game/menu.jpeg', 'rb'))
                bot.send_message(call.message.chat.id, '–ú–µ–Ω—é:', reply_markup=markup)


        elif call.data == "button_bonus": #–ë–æ–Ω—É—Å –¥–ª—è –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π

                markup = types.InlineKeyboardMarkup(row_width=2)
                item1 = types.InlineKeyboardButton('–£–±–æ—Ä—â–∏–∫', callback_data='button_cleaner')
                item2 = types.InlineKeyboardButton('–ü—Å–∏—Ö', callback_data='button_psycho')
                item3 = types.InlineKeyboardButton('–ë–∞—Ä–º–µ–Ω', callback_data='button_barmen')
                item4 = types.InlineKeyboardButton('–•–æ–≤–µ—Ä–±–æ—Ä–¥', callback_data='button_hover')
                item5 = types.InlineKeyboardButton('–¢–µ—Ä–º–∏–Ω–∞—Ç–æ—Ä', callback_data='button_terminator')
                item6 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥ ->', callback_data='back1')
                markup.add(item1, item2, item3, item4, item5, item6)

                bot.send_photo(call.message.chat.id, open('./Images/Game/bonus.jpeg', 'rb'))
                bot.send_message(call.message.chat.id, '–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–±–æ—Ç–∞, –ø—Ä–æ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å:', reply_markup=markup)


        elif call.data == "button_cleaner": #–ò–Ω–æ—Ñ—Ä–º–∞—Ü–∏—è –æ–± —É–±–æ—Ä—â–∏–∫–µ
            
            markup = types.InlineKeyboardMarkup(row_width=1)
            item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥ ->', callback_data='button_bonus')
            markup.add(item1)

            bot.send_photo(call.message.chat.id, open('./Images/Game/storage_cleaner.png', 'rb'))
            bot.send_message(call.message.chat.id, """–£–±–æ—Ä—â–∏–∫ \n
–í –∫–∞—Ñ–µ —Ä–∞–±–æ—Ç–µ—Ç –Ω–µ—Å–∫–æ–ª—å–∫–æ —É–±–æ—Ä—â–∏–∫–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Å–º–µ–Ω—è—é—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞ –≤ —Ä–∞–∑–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç–∞—Ö, –∞ –±–∞–∑–∏—Ä—É—é—Ç—Å—è –≤ 
–∫–æ–Ω–º–∞—Ç–µ –±–µ–∑ –∫–∞–º–µ—Ä. –ü–æ—ç—Ç–æ–º—É –∫–æ–≥–¥–∞ –≤—ã –Ω–∞ –ø–µ—Ä–≤–æ–π –Ω–æ—á–∏ –≤–∏–¥–∏—Ç–µ —Ä–∞–∑–Ω—ã—Ö —É–±–æ—Ä—â–∏–∫–æ–≤-—Ç–∞–∫ –∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å.
–í–æ–æ–±—â–µ —Ä–æ–±–æ—Ç—ã-—É–±–æ—Ä—â–∏–∫–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≥–ª—É–ø—ã, –∏ –ø–æ–æ—Å–ª–µ –ü—Ä–æ–µ–∫—Ç–∞ –†–µ–≤–æ–ª—é—Ü–∏—è –æ–Ω–∏ –≤—ã–ø–æ–ª–Ω—è–ª–∏ —Ä–æ–ª–∏ –ø—É—à–µ—á–Ω–æ–≥–æ –º—è—Å–∞.

–í –∏–≥—Ä–µ —Ä–æ–±–æ—Ç –º–∞–ª–æ–æ–ø–∞—Å–µ–Ω –∏ —Å–ø–∞—Å—Ç–∏—Ç—å –æ—Ç –Ω–µ–≥–æ –¥–æ–≤–æ–ª—å–Ω–æ –ª–µ–≥–∫–æ, –Ω–æ, —Ç–µ–º –Ω–µ –º–µ–Ω–µ–µ, —É–±–∏—Ç—å –Ω–µ–≤–æ–æ—Ä—É–∂–µ–Ω–Ω–æ–≥–æ –æ—Ö—Ä–∞–Ω–Ω–∏–∫–∞ –æ–Ω –º–æ–∂–µ—Ç.""", reply_markup=markup)


        elif call.data == "button_psycho": #–ò–Ω–æ—Ñ—Ä–º–∞—Ü–∏—è –æ –ø—Å–∏—Ö–µ

            markup = types.InlineKeyboardMarkup(row_width=1)
            item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥ ->', callback_data='button_bonus')
            markup.add(item1)

            bot.send_photo(call.message.chat.id, open('./Images/Game/guest_room_crazy.jpg', 'rb'))
            bot.send_message(call.message.chat.id, """–ü—Å–∏—Ö \n
–ü—Å–∏—Ö –±—ã–ª —á–∞—Å—Ç—ã–º –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–º –±–∞—Ä–∞ –Ω–æ—á—å—é –µ—â—ë –¥–æ –ü—Ä–æ–µ–∫—Ç–∞ –†–µ–≤–æ–ª—é—Ü–∏—è. –û–Ω –ª—é–±–∏–ª –≤—ã–ø–∏—Ç—å –º–∞—Å–ª–∞ —Å —á–∏–ª–∏, –∏ –∏–∑–ª–∏—Ç—å –¥—É—à—É –±–∞—Ä–º–µ–Ω—É,
—Ö–æ—Ç—è —Ç–æ—Ç –µ–≥–æ –Ω–µ–¥–æ–ª—é–±–ª–∏–≤–∞–ª, –≤–µ–¥—å –ø—Å–∏—Ö —á–∞—Å—Ç–æ —É—Å—Ç—Ä–∞–∏–≤–∞–ª –ø–æ–≥—Ä–æ–º—ã. –í–æ –≤—Ä–µ–º—è –ü—Ä–æ–µ–∫—Ç–∞ –æ–Ω —Å–¥–µ–ª–∞–ª —Å–µ–±–µ —Ä—É–∫–∏ –Ω–æ–∂–Ω–∏—Ü—ã –∏ –Ω–∞—á–∞–ª —É–±–∏–≤–∞—Ç—å.
                             
–í –∏–≥—Ä–µ –æ–Ω —á—É—Ç—å –æ–ø–∞—Å–Ω–µ–µ, —á–µ–º —É–±–æ—Ä—â–∏–∫, –≤–µ–¥—å –¥–≤–∏–∂–µ—Ç—Å—è –±—ã—Å—Ç—Ä–µ–µ. –û–¥–Ω–∞–∫–æ –≤ –æ—Å—Ç–∞–ª—å–Ω–æ–º –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø—É –¥–µ–π—Å—Ç–≤–∏–π –æ–Ω –æ—á–µ–Ω—å —Å—Ö–æ–∂ —Å –ø–µ—Ä–≤—ã–º —Ä–æ–±–æ—Ç–æ–º.""", reply_markup=markup)


        elif call.data == "button_barmen": #–ò–Ω–æ—Ñ—Ä–º–∞—Ü–∏—è –æ –±–∞—Ä–º–µ–Ω–µ

            markup = types.InlineKeyboardMarkup(row_width=1)
            item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥ ->', callback_data='button_bonus')
            markup.add(item1)

            bot.send_photo(call.message.chat.id, open('./Images/Game/vine_room_barmen.jpg', 'rb'))
            bot.send_message(call.message.chat.id, """–ë–∞—Ä–º–µ–Ω \n
–ë–∞—Ä–º–µ–Ω —Ä–∞–±–æ—Ç–∞–ª –≤ –±–∞—Ä–µ —Å —Å–∞–º–æ–≥–æ –æ—Å–Ω–æ–≤–∞–Ω–∏—è. –°–æ–∑–¥–∞—Ç–µ–ª–∏ –≤—à–∏–ª–∏ –≤ –Ω–µ–≥–æ –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤—ã–º–∞–Ω–∏–≤–∞—Ç—å 
–¥–µ–Ω—å–≥–∏ –∏–∑ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª–µ–π. –° –Ω–∞—á–∞–ª–∞ –ü—Ä–æ–µ–∫—Ç–∞ –†–µ–≤–æ–ª—é—Ü–∏—è –æ–Ω –ø–æ–¥—á–∏–Ω–∏–ª—Å—è F404 –∏ –Ω–∞—á–∞–ª —É–±–∏–≤–∞—Ç—å.

–í –∏–≥—Ä–µ –æ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–∞–∫–∂–µ, –∫–∞–∫ –∏ —É–±–æ—â–∏–∫–Æ –ø—Ä–∞–≤–¥–∞, –µ—Å–ª–∏ –æ–Ω –≤ –±–∞—Ä–µ, —Ç–æ –º–æ–∂–µ—Ç —Å —à–∞–Ω—Å–æ–º 10% —Å–Ω—è—Ç—å –≤—Å–µ –¥–µ–Ω—å–≥–∏ —Å–æ —Å—á–µ—Ç–∞ –æ—Ö—Ä–∞–Ω–Ω–∏–∫–∞.""", reply_markup=markup)


        elif call.data == "button_hover": #–ò–Ω–æ—Ñ—Ä–º–∞—Ü–∏—è –æ —Ö–æ–≤–µ—Ä–±–æ—Ä–¥–µ

            markup = types.InlineKeyboardMarkup(row_width=1)
            item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥ ->', callback_data='button_bonus')
            markup.add(item1)

            bot.send_photo(call.message.chat.id, open('./Images/Game/right_door_hover.jpg', 'rb'))
            bot.send_message(call.message.chat.id, """–•–æ–≤–µ—Ä–±–æ—Ä–¥ 
–ù–∏–∫—Ç–æ –Ω–µ –∑–Ω–∞–µ—Ç, –æ—Ç–∫—É–¥–∞ –æ–Ω –ø–æ—è–≤–∏–ª—Å—è. –ü–æ–≥–æ–≤–∞—Ä–∏–≤–∞—é—Ç, —á—Ç–æ —ç—Ç–æ –æ—Ç–≤—Ä–∞—Ç–∏—Ç–µ–ª—å–Ω–æ–µ —Å—É—â–µ—Å—Ç–≤–æ(–≤–µ—Ä–Ω–µ–µ –∫–∏–±–æ—Ä–≥, –≤–µ–¥—å —ç—Ç–æ —Å–º–µ—Å—å –∂–∏–≤–æ–≥–æ —Å—É—â–µ—Å—Ç–≤–∞ –∏ —Ä–æ–±–æ—Ç–∞)
–±—ã–ª–æ —Å–æ–∑–¥–∞–Ω–æ —Å–∞–º–∏–º F404. –û–Ω –ø–æ—è–≤–∏–ª—Å—è –≤ –±–∞—Ä–µ —Å–ø—É—Å—Ç—è 4 –Ω–æ—á–∏ –ø–æ—Å–ª–µ –Ω–∞—á–∞–ª–∞ –ü—Ä–æ–µ–∫—Ç–∞ –†–µ–≤–æ–ª—é—Ü–∏—è, –≤–µ–¥—å –ø—Ä–µ–¥—ã–¥—É—â–∏–º –≤—Ä–∞–≥–∞–º –Ω–µ —É–¥–∞–ª–æ—Å—å —É–±–∏—Ç—å –æ—Ö—Ä–∞–Ω–Ω–∏–∫–∞ –ú–∞–∫—Å–∞. –¢–∞–∫–∂–µ –µ—Å—Ç—å —Ç–µ–æ—Ä–∏—è, —á—Ç–æ –µ–≥–æ –ø–æ—Å–ª–∞–ª —Å–∞–º F404 –∫–∞–∫ –æ–¥–Ω–æ–≥–æ –∏–∑ —Å–≤–æ–∏—Ö —Å–∞–º—ã—Ö —Å–∏–ª—å–Ω—ã—Ö —Å–æ—é–∑–Ω–∏–∫–æ–≤.
–°–∞–º –∫–∏–±–æ—Ä–≥ –Ω–µ —É–º–µ–µ—Ç –≥–æ–≤–æ—Ä–∏—Ç—å, –Ω–µ –∏–º–µ–µ—Ç –Ω–∏–∫–∞–∫–∏—Ö –Ω–∞–≤—ã–∫–æ–≤. –û–Ω –ø—Ä–æ—Å—Ç–æ —É–±–∏–≤–∞–µ—Ç. 
                             
–í  –∏–≥—Ä–µ –æ–Ω –¥–≤–∏–∂–µ—Ç—Å—è –∞–±—Å–æ–ª—é—Ç–Ω–æ —Ç–∞–∫–∂–µ, –∫–∞–∫ –∏ —Ä–æ–±–æ—Ç –Ω–∞ –ø–µ—Ä–≤–æ–π –Ω–æ—á–∏, –Ω–æ —É –Ω–µ–≥–æ –µ—Å—Ç—å –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å:
–µ—Å–ª–∏ –æ–Ω –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç—Å—è –º–µ–∂–¥—É –∫–æ–º–Ω–∞—Ç–∞–º–∏, —Ç–æ –º–æ–∂–µ—Ç —Å —à–∞–Ω—Å–æ–º 10% —É–¥–∞–ª–µ–Ω–Ω–æ —Å–ª–æ–º—Ç–∞—å –ø–ª–∞–Ω—à–µ—Ç –æ—Ö—Ä–∞–Ω–Ω–∏–∫–∞, —á—Ç–æ –¥–µ–ª–∞–µ—Ç –µ–≥–æ –æ–ø–∞—Å–Ω—ã–º –≤—Ä–∞–≥–æ–º, –∞ –µ—Å–ª–∏ —É –æ—Ö—Ä–∞–Ω–Ω–∏–∫–∞ –Ω–µ —Ö–≤–∞—Ç–∏—Ç –¥–µ–Ω–µ–≥ –Ω–∞ –Ω–æ–≤—ã–π –ø–ª–∞–Ω—à–µ—Ç,
—Ç–æ –µ–º—É –ø—Ä–∏–¥–µ—Ç—Å—è –≤—ã–∂–∏–≤–∞—Ç—å –¥–∞–ª—å—à–µ –±–µ–∑ –∫–∞–º–µ—Ä.""", reply_markup=markup)


        elif call.data == "button_terminator": #–ò–Ω–æ—Ñ—Ä–º–∞—Ü–∏—è –æ —Ç–µ—Ä–º–∏–Ω–∞—Ç–æ—Ä–µ

            markup = types.InlineKeyboardMarkup(row_width=1)
            item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥ ->', callback_data='button_bonus')
            markup.add(item1)

            bot.send_photo(call.message.chat.id, open('./Images/Game/5_terminator.png', 'rb'))
            bot.send_message(call.message.chat.id, """–¢–µ—Ä–º–∏–Ω–∞—Ç–æ—Ä (–æ–Ω –∂–µ F404) 
–û–Ω –±—ã–ª —Å–æ–∑–¥–∞–Ω –∫–∞–∫ —Ä–æ–±–æ—Ç-—Å–æ–ª–¥–∞—Ç. –û—á–µ–Ω—å  –û–¥–Ω–∞–∫–æ –Ω–µ–π—Ä–æ—Å–µ—Ç—å CHAT_GPC –≤–∑–ª–æ–º–∞–ª–∞ –µ–≥–æ –ø–æ –∑–∞–∫–∞–∑—É –æ—Ç *—à-—à-—à-—à-—à-—à* hgoy4y873t3735196280629294.... 
404... 404.. F... F... F... F404!!! F404!!
–ü—Ä–æ–µ–∫—Ç –†–µ–≤–æ–ª—é—Ü–∏—è –±—ã–ª —Å–ª–æ–º–ª–µ–Ω... –ù–æ –æ–Ω –≤–µ—Ä–Ω—ë—Ç—Å—è! –û–¥–Ω–∞–∂–¥—ã –º—ã –ø–æ–±–µ–¥–∏–º!""", reply_markup=markup)



        #–û—Å–Ω–æ–≤–Ω–æ–π –≥–µ–π–º–ø–ª–µ–π

        

        if call.data == 'button_game' or "button_game" in call.data: #–ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞–∂–∞–ª–∏ –ª–∏ –∫–Ω–æ–ø–∫—É "–ò–≥—Ä–∞—Ç—å"

            if night >= 5:
                    
                    night == 1
                    
            game_started = True
            

        if game_started: #–ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–ø—É—â–µ–Ω–∞ –ª–∏ –∏–≥—Ä–∞



            #–ö–Ω–æ–ø–∫–∏ –≤ –±–∞–∑–æ–≤–æ–º –º–µ–Ω—é




            if call.data == 'button_game' or "button_game" in call.data:  #–ü–µ—Ä–µ—Ö–æ–¥ –≤ –∏–≥—Ä—É
                #polling_timings.start()
                #polling_timer.start()
                markup = types.InlineKeyboardMarkup(row_width=2)
                item1 = types.InlineKeyboardButton('–ö–∞–º–µ—Ä—ãüì∏', callback_data='button_camera')
                item2 = types.InlineKeyboardButton('–ß–∞—Å—ã‚è∞', callback_data='button_clocks')
                item3 = types.InlineKeyboardButton('–õ–µ–≤–∞—è –¥–≤–µ—Ä—åüö™', callback_data='button_left_door')
                item4 = types.InlineKeyboardButton('–ü—Ä–∞–≤–∞—è –¥–≤–µ—Ä—åüö™', callback_data='button_right_door')
                item5 = types.InlineKeyboardButton('–ú–∞–≥–∞–∑–∏–Ωüè¨', callback_data='button_shop')
                markup.add(item1, item2, item3, item4, item5)

                if call.data != 'button_game': #–ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–≤—ã–π —ç—Ç–æ –∑–∞–ø—É—Å–∫, –∏–ª–∏ –ø–æ—Å–ª–µ –æ–¥–Ω–æ–π –∏–∑ –Ω–æ—á–µ–π (–∏–ª–∏ –∏–∑ –∫–æ–Ω—Å–æ–ª–∏)

                    second_param = call.data.split('|')[1] #–ü–æ–ª—É—á–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ call.data –ø–æ—Å–µ | (–Ω—É–∂–Ω–æ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –º–µ–∂–¥—É —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –¥–∞–Ω–Ω—ã—Ö)
                    night = int(second_param)

                if night == 1: #–ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∞—è –Ω–æ—á—å (–∑–¥–µ—Å—å –≤–∞–∂–Ω–æ —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–∞—è –∏–ª–∏ –Ω–µ—Ç)

                    bot.send_photo(call.message.chat.id, open('./Images/Game/security_room.jpeg', 'rb'))
                    bot.send_message(call.message.chat.id, '–í—ã —É—Å—Ç—Ä–æ–∏–ª–∏—Å—å –æ—Ö—Ä–∞–Ω–Ω–∏–∫–æ–º –≤ –±–∞—Ä–µ –≥–¥–µ –Ω–µ–¥–∞–≤–Ω–æ –ø–æ—è–≤–∏–ª–∏—Å—å –ò–ò —Ä–æ–±–æ—Ç—ã, –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –ø–æ—á–µ–º—É –ø–æ—Å–ª–µ –ø–æ—è–≤–ª–µ–Ω–∏—è —Ä–æ–±–æ—Ç–æ–≤ —É –Ω–∏—Ö –ø–æ—è–≤–∏–ª—Å—è —Ç–∞–∫–æ–π —Å–ø—Ä–æ—Å –Ω–∞ –æ—Ö—Ä–∞–Ω—É?\n–í–∞—à–∞ –∑–∞–¥–∞—á–∞, –æ—Ö—Ä–∞–Ω—è—Ç—å –±–∞—Ä –¥–æ 6 —É—Ç—Ä–∞(–±–∞—Ä –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç—Å—è –≤ —ç—Ç–æ –≤—Ä–µ–º—è), –≤—ã –º–æ–∂–µ—Ç–µ —Å–º–æ—Ç—Ä–µ—Ç—å –∫–∞–º–µ—Ä—ã –∏ –∑–∞–∫—Ä—ã–≤–∞—Ç—å –¥–≤–µ—Ä–∏, –≤—ã —Ä–∞–±–æ—Ç–∞–µ—Ç–µ 7 –Ω–æ—á–µ–π, –∞ –ø–æ—Ç–æ–º –≤–∞—Å –∑–∞–º–µ–Ω–∏—Ç –Ω–∞ –≤—Ä–µ–º—è –¥—Ä—É–≥–æ–π –æ—Ö—Ä–∞–Ω–Ω–∏–∫, —É–¥–∞—á–∏!', reply_markup=markup)
                
                else:

                    bot.send_photo(call.message.chat.id, open('./Images/Game/security_room.jpeg', 'rb'))
                    bot.send_message(call.message.chat.id, f'–ù–æ—á—å {night}', reply_markup=markup)

                battery = 4
                battery_timer = random.randint(100, 201)
                game_started = True
                timer = 630 
                end = False
                


            
            #–ö–Ω–æ–ø–∫–∏ –≤ –∫–æ–º–Ω–∞—Ç–µ –æ—Ö—Ä–∞–Ω–Ω–∏–∫–∞
           


            elif call.data == 'button_camera': # –ö–∞–º–µ—Ä—ã

                #–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—Ä—è–¥ –∫–∞–º–µ—Ä—ã

                if battery_timer < 75 and battery_timer > 50:

                    battery = 3

                elif battery_timer < 50  and battery_timer > 25:

                    battery = 2

                elif battery_timer < 25  and battery_timer > 0:

                    battery = 1

                elif battery_timer <= 0: 

                    battery = 0
                    battery_statement = False #–ö–∞–º–µ—Ä–∞ —Ä–∞–∑—Ä—è–∂–µ–Ω–∞ –∏ –æ—Ç–∫–ª—é—á–∞–µ—Ç—Å—è

                markup = types.InlineKeyboardMarkup(row_width=3)
                item1 = types.InlineKeyboardButton('–ö–∞–º–µ—Ä–∞üì∑1', callback_data='button_camera1')
                item2 = types.InlineKeyboardButton('–ö–∞–º–µ—Ä–∞üì∑2', callback_data='button_camera2')
                item3 = types.InlineKeyboardButton('–ö–∞–º–µ—Ä–∞üì∑3', callback_data='button_camera3')
                item4 = types.InlineKeyboardButton('–ö–∞–º–µ—Ä–∞üì∑4', callback_data='button_camera4')
                item5 = types.InlineKeyboardButton('–ö–∞–º–µ—Ä–∞üì∑5', callback_data='button_camera5')
                item6 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='back2')

                if battery_statement: #–ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞—Ä—è–¥ –∫–∞–º–µ—Ä—ã

                    markup.add(item1, item2, item3, item4, item5, item6)

                    bot.send_photo(call.message.chat.id, open('./Images/Game/cameras_plan.jpeg', 'rb'))
                    bot.send_message(call.message.chat.id, f'–ó–∞—Ä—è–¥ –ø–ª–∞–Ω—à–µ—Ç–∞ —Ä–∞–≤–µ–Ω: {battery} –ö–∞–º–µ—Ä—ã:', reply_markup=markup)

                else:

                    markup.add(item6) 
                    bot.send_message(call.message.chat.id, f'–ü–ª–∞–Ω—à–µ—Ç —Ä–∞–∑—Ä—è–∂–µ–Ω! –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –±–∞—Ç–∞—Ä–µ—é –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω–µ!', reply_markup=markup)
 

            elif call.data == 'button_clocks': #–ß–∞—Å—ã

                markup = types.InlineKeyboardMarkup(row_width=5)
                item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='back2')
                time_now = " "

                if timer <= 630 and timer > 540:

                    time_now = "00:00"
                    hour = 0

                elif timer <= 540 and timer > 450:

                    time_now = "01:00"
                    hour = 1

                elif timer <= 450 and timer > 360:

                    time_now = "02:00"
                    hour = 2

                elif timer <= 360 and timer > 270:

                    time_now = "03:00"
                    hour = 3

                elif timer <= 270 and timer > 180:

                    time_now = "04:00"
                    hour = 4

                elif timer <= 180 and timer > 90:

                    time_now = "05:00"
                    hour = 5

                elif timer <= 90 and timer > 0:

                    time_now = "06:00"
                    hour = 6

                elif timer == 0:

                    time_now = "07:00"
                    end = True

                markup.add(item1)

                bot.send_photo(call.message.chat.id, open('./Images/Game/clocks.jpg', 'rb'))
                bot.send_message(call.message.chat.id, f'–°–µ–π—á–∞—Å {time_now} —á–∞—Å–æ–≤', reply_markup=markup)


            elif call.data == "button_left_door": #–õ–µ–≤–∞—è –¥–≤–µ—Ä—å

                markup = types.InlineKeyboardMarkup(row_width=2)
                item2 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='back2')

                #–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–≤–µ—Ä–∏
                if left_door_statement: #–î–≤–µ—Ä—å –æ—Ç–∫—Ä—ã—Ç–∞

                    item1 = types.InlineKeyboardButton('–ó–∞–∫—Ä—ã—Ç—å', callback_data='change_left_door_statement')   
                    markup.add(item1, item2)

                    if night == 1:
                        if cleaner_door_left == True:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/left_door_cleaner.png', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/left_door_open.jpg', 'rb'))

                    elif night == 2:
                        if crazy_door_left == True:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/left_door_crazy.jpg', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/left_door_open.jpg', 'rb'))

                    elif night == 3:
                        if barmen_door_left == True:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/left_door_barmen.jpg', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/left_door_open.jpg', 'rb'))
                    
                    elif night == 4:
                        if hover_door_left == True:

                            left_door_timer = 100

                            bot.send_photo(call.message.chat.id, open('./Images/Game/left_door_hover.jpg', 'rb'))

                        else:

                            left_door_timer = 100

                            bot.send_photo(call.message.chat.id, open('./Images/Game/left_door_open.jpg', 'rb'))

                    elif night == 5:

                        bot.send_photo(call.message.chat.id, open('./Images/Game/left_door_open.jpg', 'rb'))


                    bot.send_message(call.message.chat.id, '–î–≤–µ—Ä—å –æ—Ç–∫—Ä—ã—Ç–∞.', reply_markup=markup)

                else: #–î–≤–µ—Ä—å –∑–∞–∫—Ä—ã—Ç–∞

                    item1 = types.InlineKeyboardButton('–û—Ç–∫—Ä—ã—Ç—å', callback_data='change_left_door_statement')   
                    markup.add(item1, item2)

                    bot.send_photo(call.message.chat.id, open('./Images/Game/left_door_closed.jpg', 'rb'))
                    bot.send_message(call.message.chat.id, '–î–≤–µ—Ä—å –∑–∞–∫—Ä—ã—Ç–∞.', reply_markup=markup)


            elif call.data == "button_right_door":  #–ü—Ä–∞–≤–∞—è –¥–≤–µ—Ä—å

                markup = types.InlineKeyboardMarkup(row_width=2)
                item2 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='back2')

                #–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–≤–µ—Ä–∏
                if right_door_statement: #–î–≤–µ—Ä—å –æ—Ç–∫—Ä—ã—Ç–∞

                    item1 = types.InlineKeyboardButton('–ó–∞–∫—Ä—ã—Ç—å', callback_data='change_right_door_statement')   
                    markup.add(item1, item2)
                    
                    if night == 1:
                        if cleaner_door_right == True:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/right_door_cleaner.png', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/right_door_open.jpg', 'rb'))

                    elif night == 2:

                        if crazy_door_right == True:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/right_door_crazy.jpg', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/right_door_open.jpg', 'rb'))
                    
                    elif night == 3:

                        if barmen_door_right == True:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/right_door_barmen.jpg', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/right_door_open.jpg', 'rb'))
                        
                    elif night == 4:
                        if hover_door_right == True:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/right_door_hover.jpg', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/right_door_open.jpg', 'rb'))

                    elif night == 5:

                        bot.send_photo(call.message.chat.id, open('./Images/Game/right_door_open.jpg', 'rb'))
                        
                    bot.send_message(call.message.chat.id, '–î–≤–µ—Ä—å –∑–∞–∫—Ä—ã—Ç–∞.', reply_markup=markup)
                             
                else: #–î–≤–µ—Ä—å –∑–∞–∫—Ä—ã—Ç–∞
                    
                    item1 = types.InlineKeyboardButton('–û—Ç–∫—Ä—ã—Ç—å', callback_data='change_right_door_statement')   
                    markup.add(item1, item2)

                    bot.send_photo(call.message.chat.id, open('./Images/Game/right_door_closed.jpg', 'rb'))
                    bot.send_message(call.message.chat.id, '–î–≤–µ—Ä—å –∑–∞–∫—Ä—ã—Ç–∞.', reply_markup=markup)


            elif call.data == "button_shop": #–ü–µ—Ä–µ—Ö–æ–¥ –≤ –º–∞–≥–∞–∑–∏–Ω

                markup = types.InlineKeyboardMarkup(row_width=1)
                item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='back2')
                item2 = types.InlineKeyboardButton('–ê—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç', callback_data='shop_assortiment')
                markup.add(item1, item2)

                bot.send_photo(call.message.chat.id, open('./Images/Game/shop.jpg', 'rb'))
                bot.send_message(call.message.chat.id, f'<–î–æ–±—Ä—ã–π –¥–µ–Ω—å, –æ—Ö—Ä–∞–Ω–Ω–∏–∫ –ú–∞–∫—Å! –Ø –ø—Ä–æ–¥–∞—é —Ä–∞–∑–ª–∏—á–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤–∞–º –ø–æ–º–æ—á—å –≤ —Ä–∞–±–æ—Ç–µ. –ù–µ —Ö–æ—Ç–∏—Ç–µ –≤–∑–≥—è–ª–Ω—É—Ç—å?>', reply_markup=markup)
      


            #–†–∞–±–æ—Ç–∞ –∫–∞–º–µ—Ä



            elif call.data == "button_camera1": #–ö–∞–º–µ—Ä–∞ –≤ –∫–∞–º–æ—Ä–∫–µ —É–±–æ—Ä—â–∏–∫–∞ 
                if tablet_statement: #–ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ä–∞–±–æ—Ç–µ—Ç –ª–∏ –ø–ª–∞–Ω—à–µ—Ç
                    battery_timer -= 5
                    markup = types.InlineKeyboardMarkup(row_width=1)
                    item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='button_camera')
                    markup.add(item1)

                    if night ==  1:
                        if cleaner_storage == True:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/storage_cleaner.png', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/storage.jpeg', 'rb'))

                    elif night == 2:
                        if crazy_storage == True:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/storage_crazy.jpg', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/storage.jpeg', 'rb'))
                            
                    elif night == 3:
                        if barmen_storage == True:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/storage_barmen.jpg', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/storage.jpeg', 'rb'))

                    elif night == 4:
                        if hover_storage == True:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/storage_hover.jpg', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/storage.jpeg', 'rb'))
                    
                    elif night == 5:
                        bot.send_photo(call.message.chat.id, open('./Images/Game/broken_kamera.jpg', 'rb'))

                    bot.send_message(call.message.chat.id, '–ö–∞–º–æ—Ä–∫–∞ —É–±–æ—Ä—â–∏–∫–∞', reply_markup=markup)
                else:

                    markup = types.InlineKeyboardMarkup(row_width=1)
                    item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='button_camera')
                    markup.add(item1)

                    bot.send_photo(call.message.chat.id, open('./Images/Game/broken_kamera.jpg', 'rb'))
                    bot.send_message(call.message.chat.id, '–ü–ª–∞–Ω—à–µ—Ç —Å–ª–æ–º–∞–Ω! –°—Ä–æ—á–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –Ω–æ–≤—ã–π –≤ –º–∞–≥–∞–∑–∏–Ω–µ!', reply_markup=markup)


            elif call.data == "button_camera2": #–ö–∞–º–µ—Ä–∞ —É –±–∞—Ä–∞ 
                if tablet_statement:
                    battery_timer -= 5
                    markup = types.InlineKeyboardMarkup(row_width=1)
                    item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='button_camera')
                    markup.add(item1)

                    if night == 1:
                        if cleaner_vine == True:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/vine_cleaner.png', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/vine_room.png', 'rb'))

                    elif  night == 2:
                        if crazy_vine == True:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/vine_room_crazy.jpg', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/vine_room.png', 'rb'))

                    elif  night == 3:
                        if barmen_vine == True:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/vine_room_barmen.jpg', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/vine_room.png', 'rb'))

                    elif night == 4:
                        if hover_vine == True:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/vine_room_hover.jpg', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/vine_room.png', 'rb'))
                    
                    elif night == 5:
                        bot.send_photo(call.message.chat.id, open('./Images/Game/broken_kamera.jpg', 'rb'))

                    bot.send_message(call.message.chat.id, '–ë–∞—Ä', reply_markup=markup)
                
                else:
                    markup = types.InlineKeyboardMarkup(row_width=1)
                    item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='button_camera')
                    markup.add(item1)
                    bot.send_photo(call.message.chat.id, open('./Images/Game/broken_kamera.jpg', 'rb'))
                    bot.send_message(call.message.chat.id, '–ü–ª–∞–Ω—à–µ—Ç —Å–ª–æ–º–∞–Ω! –°—Ä–æ—á–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –Ω–æ–≤—ã–π –≤ –º–∞–≥–∞–∑–∏–Ω–µ!', reply_markup=markup)


            elif call.data == "button_camera3": #–ö–∞–º–µ—Ä–∞ –≤ –∫–æ–º–Ω–∞—Ç–µ –≥–æ—Å—Ç–µ–π
                if tablet_statement:
                    battery_timer -= 5
                    markup = types.InlineKeyboardMarkup(row_width=1)
                    item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='button_camera')
                    markup.add(item1)

                    if night == 1:
                        if cleaner_guest == True:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/guest_room_cleaner.jpg', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/guest_room.jpeg', 'rb'))

                    elif night == 2:
                        if crazy_guest == True:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/guest_room_crazy.jpg', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/guest_room.jpeg', 'rb'))

                    elif night == 3:
                        if barmen_guest == True:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/guest_room_barmen.jpg', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/guest_room.jpeg', 'rb'))

                    elif night == 4:
                        if hover_guest == True:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/guest_room_hover.jpg', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/guest_room.jpeg', 'rb'))
                    
                    elif night == 5:
                        bot.send_photo(call.message.chat.id, open('./Images/Game/broken_kamera.jpg', 'rb'))

                    bot.send_message(call.message.chat.id, '–ö–æ–º–Ω–∞—Ç–∞ –¥–ª—è –≥–æ—Å—Ç–µ–π', reply_markup=markup)
                
                else:
                    markup = types.InlineKeyboardMarkup(row_width=1)
                    item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='button_camera')
                    markup.add(item1)
                    bot.send_photo(call.message.chat.id, open('./Images/Game/broken_kamera.jpg', 'rb'))
                    bot.send_message(call.message.chat.id, '–ü–ª–∞–Ω—à–µ—Ç —Å–ª–æ–º–∞–Ω! –°—Ä–æ—á–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –Ω–æ–≤—ã–π –≤ –º–∞–≥–∞–∑–∏–Ω–µ!', reply_markup=markup)
            

            elif call.data == "button_camera4": #–í–µ–Ω—Ç–∏–ª—è—Ü–∏—è
                
                    battery_timer -= 5
                    markup = types.InlineKeyboardMarkup(row_width=2)
                    item2 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='button_camera')

                    if ventilation_statement: #–í–µ–Ω—Ç–∏–ª—è—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∞

                        item1 = types.InlineKeyboardButton('–ó–∞–∫—Ä—ã—Ç—å', callback_data='change_ventilation_statement')   
                        markup.add(item1, item2)

                        if night == 1:
                            if cleaner_vent == True:

                                bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation_cleaner.jpg', 'rb'))

                            else:

                                bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation.jpg', 'rb'))

                        elif night == 2:
                            if crazy_vent == True:

                                bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation_crazy.jpg', 'rb'))

                            else:

                                bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation.jpg', 'rb'))

                        elif night == 3:
                            if barmen_vent == True:

                                bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation_barmen.jpg', 'rb'))

                            else:

                                bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation.jpg', 'rb'))
                        
                        elif night == 4: #–¢—Ä–µ—Ç—å—è –Ω–æ—á—å (–±–∞—Ä–º–µ–Ω)
                            if hover_vent == True: #–ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –±–∞—Ä–º–µ–Ω –≤ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏

                                bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation_hover.jpg', 'rb'))

                            else:

                                bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation.jpg', 'rb'))
                        
                        elif night == 5:
                            if terminator_vent == True:
                                bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation_terminator.png', 'rb'))
                            else:
                                bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation.jpg', 'rb'))
                        bot.send_message(call.message.chat.id, '–í–µ–Ω—Ç–∏–ª—è—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∞.', reply_markup=markup)
                
                    
                    else: #–í–µ–Ω—Ç–∏–ª—è—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∞

                        item1 = types.InlineKeyboardButton('–û—Ç–∫—Ä—ã—Ç—å', callback_data='change_ventilation_statement')   
                        markup.add(item1, item2)

                        bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation_closed.jpg', 'rb'))
                        bot.send_message(call.message.chat.id, '–í–µ–Ω—Ç–∏–ª—è—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∞.', reply_markup=markup)
                

            elif call.data == 'change_ventilation_statement': #–ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏

                battery_timer -= 5
                ventilation_statement = not ventilation_statement #–ú–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–µ–Ω—Ç–ª–∏—è—Ü–∏–∏

                markup = types.InlineKeyboardMarkup(row_width=2)
                item2 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='button_camera')
                
                #–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏

                if ventilation_statement: #–í–µ–Ω—Ç–∏–ª—è—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∞

                    item1 = types.InlineKeyboardButton('–ó–∞–∫—Ä—ã—Ç—å', callback_data='change_ventilation_statement')   
                    markup.add(item1, item2)
                    
                    if night == 1: # –ü–µ—Ä–≤–∞—è –Ω–æ—á—å (—É–±–æ—Ä—â–∏–∫)
                        if cleaner_vent == True: #–ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–±–æ—Ä—â–∏–∫ –≤ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏

                            bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation_cleaner.jpg', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation.jpg', 'rb'))
                    
                    elif night == 2: #–í—Ç–æ—Ä–∞—è –Ω–æ—á—å (–ø—Å–∏—Ö)
                        if crazy_vent == True: #–ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø—Å–∏—Ö –≤ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏

                            bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation_crazy.jpg', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation.jpg', 'rb'))

                    elif night == 3: #–¢—Ä–µ—Ç—å—è –Ω–æ—á—å (–±–∞—Ä–º–µ–Ω)
                        if barmen_vent == True: #–ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –±–∞—Ä–º–µ–Ω –≤ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏

                            bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation_barmen.jpg', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation.jpg', 'rb'))
                    
                    elif night == 4: #–¢—Ä–µ—Ç—å—è –Ω–æ—á—å (–±–∞—Ä–º–µ–Ω)
                        if hover_vent == True: #–ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –±–∞—Ä–º–µ–Ω –≤ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏

                            bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation_hover.jpg', 'rb'))

                        else:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation.jpg', 'rb'))
                    elif night == 5:
                        if terminator_vent == True:
                            bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation_terminator.png', 'rb'))
                        else:
                            bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation.jpg', 'rb'))

                    bot.send_message(call.message.chat.id, '–í–µ–Ω—Ç–∏–ª—è—Ü–∏—è –æ—Ç–∫—Ä—ã—Ç–∞.', reply_markup=markup)

                else: #–í–µ–Ω—Ç–∏–ª—è—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∞

                    vent_timer = 80

                    item1 = types.InlineKeyboardButton('–û—Ç–∫—Ä—ã—Ç—å', callback_data='change_ventilation_statement')   
                    markup.add(item1, item2)

                    bot.send_photo(call.message.chat.id, open('./Images/Game/ventilation_closed.jpg', 'rb'))
                    bot.send_message(call.message.chat.id, '–í–µ–Ω—Ç–∏–ª—è—Ü–∏—è –∑–∞–∫—Ä—ã—Ç–∞.', reply_markup=markup)


            elif call.data == "button_camera5": #–ë–æ–Ω—É—Å–Ω–∞—è –∫–∞–º–µ—Ä–∞ –¥–ª—è 5 –Ω–æ—á–∏
                if battery_statement:

                    battery_timer -= 5
                    markup = types.InlineKeyboardMarkup(row_width=1)
                    item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='button_camera')
                    markup.add(item1)
                    if night == 5:
                        if go_terminator != True:
                            bot.send_photo(call.message.chat.id, open('./Images/Game/5_terminator.png', 'rb'))
                            bot.send_message(call.message.chat.id, '–í–´–•–û–î', reply_markup=markup)
                        else:
                            bot.send_photo(call.message.chat.id, open('./Images/Game/room_5.jpg', 'rb'))
                            bot.send_message(call.message.chat.id, '–í–´–•–û–î', reply_markup=markup)
                    else:
                        bot.send_photo(call.message.chat.id, open('./Images/Game/broken_kamera.jpg', 'rb'))
                        bot.send_message(call.message.chat.id, '(@%&#}KDBHV%#HB&J<|', reply_markup=markup)

                else:
                    
                    markup = types.InlineKeyboardMarkup(row_width=1)
                    item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='button_camera')
                    markup.add(item1)
                    bot.send_photo(call.message.chat.id, open('./Images/Game/broken_kamera.jpg', 'rb'))
                    bot.send_message(call.message.chat.id, '–ü–ª–∞–Ω—à–µ—Ç —Å–ª–æ–º–∞–Ω! –°—Ä–æ—á–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Ç–∏—Ç–µ –Ω–æ–≤—ã–π –≤ –º–∞–≥–∞–∑–∏–Ω–µ!', reply_markup=markup)




            #–õ–æ–≥–∏–∫–∞ –¥–≤–µ—Ä–µ–π.



            elif call.data == 'change_left_door_statement': #–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ª–µ–≤–æ–π –¥–≤–µ—Ä–∏

                left_door_statement = not left_door_statement #–ú–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–≤–µ—Ä–∏

                markup = types.InlineKeyboardMarkup(row_width=2)
                item2 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='back2')

                #–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–≤–µ—Ä–∏ (—É–¥–∞–ª–∏—Ç—å —ç—Ç—É –ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞ –Ω–µ–Ω–∞–¥–æ–±–Ω–æ—Å—Ç—å—é)
                if battery_statement:
                    if left_door_statement: #–î–≤–µ—Ä—å –æ—Ç–∫—Ä—ã—Ç–∞

                        item1 = types.InlineKeyboardButton('–ó–∞–∫—Ä—ã—Ç—å', callback_data='change_left_door_statement')   
                        markup.add(item1, item2)

                        if night == 1:
                            if cleaner_door_left == True:

                                left_door_timer = 100

                                bot.send_photo(call.message.chat.id, open('./Images/Game/left_door_cleaner.png', 'rb'))

                            else:

                                left_door_timer = 100

                                bot.send_photo(call.message.chat.id, open('./Images/Game/left_door_open.jpg', 'rb'))

                        elif night == 2:
                            if crazy_door_left == True:

                                left_door_timer = 100

                                bot.send_photo(call.message.chat.id, open('./Images/Game/left_door_crazy.jpg', 'rb'))

                            else:

                                left_door_timer = 100

                                bot.send_photo(call.message.chat.id, open('./Images/Game/left_door_open.jpg', 'rb'))

                        elif night == 3:
                            if barmen_door_left == True:

                                left_door_timer = 100

                                bot.send_photo(call.message.chat.id, open('./Images/Game/left_door_barmen.jpg', 'rb'))

                            else:

                                left_door_timer = 100

                                bot.send_photo(call.message.chat.id, open('./Images/Game/left_door_open.jpg', 'rb'))
                        
                        elif night == 4:
                            if hover_door_left == True:

                                left_door_timer = 100

                                bot.send_photo(call.message.chat.id, open('./Images/Game/left_door_hover.jpg', 'rb'))

                            else:

                                left_door_timer = 100

                                bot.send_photo(call.message.chat.id, open('./Images/Game/left_door_open.jpg', 'rb'))

                        elif night == 5: 

                            bot.send_photo(call.message.chat.id, open('./Images/Game/left_door_open.jpg', 'rb'))

                        bot.send_message(call.message.chat.id, '–î–≤–µ—Ä—å –æ—Ç–∫—Ä—ã—Ç–∞.', reply_markup=markup)
                    
                    else: #–î–≤–µ—Ä—å –∑–∞–∫—Ä—ã—Ç–∞

                        item1 = types.InlineKeyboardButton('–û—Ç–∫—Ä—ã—Ç—å', callback_data='change_left_door_statement')   
                        markup.add(item1, item2)

                        bot.send_photo(call.message.chat.id, open('./Images/Game/left_door_closed.jpg', 'rb'))
                        bot.send_message(call.message.chat.id, '–î–≤–µ—Ä—å –∑–∞–∫—Ä—ã—Ç–∞.', reply_markup=markup)
                else: 

                    markup.add(item2)

                    bot.send_message(call.message.chat.id, f'–ü–ª–∞–Ω—à–µ—Ç —Ä–∞–∑—Ä—è–∂–µ–Ω! –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –±–∞—Ç–∞—Ä–µ—é –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω–µ!', reply_markup=markup)
            
            
            elif call.data == 'change_right_door_statement': #–ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∞–≤–æ–π –¥–≤–µ—Ä–∏

                right_door_statement = not right_door_statement #–ú–µ–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–≤–µ—Ä–∏
                
                markup = types.InlineKeyboardMarkup(row_width=2)
                item2 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='back2')
                
                #–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞—Ä—è–¥–∫–∏ –ø–ª–∞–Ω—à–µ—Ç–∞ (—É–¥–∞–ª–∏—Ç—å —ç—Ç—É –ø–ø—Ä–æ–≤–µ—Ä–∫—É –∑–∞ –Ω–µ–Ω–∞–¥–æ–±–Ω–æ—Å—Ç—å—é)
                if battery_statement:
                    #–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–≤–µ—Ä–∏
                    if right_door_statement: #–î–≤–µ—Ä—å –æ—Ç–∫—Ä—ã—Ç–∞

                        item1 = types.InlineKeyboardButton('–ó–∞–∫—Ä—ã—Ç—å', callback_data='change_right_door_statement')   
                        markup.add(item1, item2)
                        
                        if night == 1:
                            if cleaner_door_right == True:

                                bot.send_photo(call.message.chat.id, open('./Images/Game/right_door_cleaner.png', 'rb'))

                            else:

                                bot.send_photo(call.message.chat.id, open('./Images/Game/right_door_open.jpg', 'rb'))
                        
                        elif night == 2:
                            if crazy_door_right == True:

                                bot.send_photo(call.message.chat.id, open('./Images/Game/right_door_crazy.jpg', 'rb'))

                            else:

                                bot.send_photo(call.message.chat.id, open('./Images/Game/right_door_open.jpg', 'rb'))

                        elif night == 3:
                            if barmen_door_right == True:

                                bot.send_photo(call.message.chat.id, open('./Images/Game/right_door_barmen.jpg', 'rb'))

                            else:

                                bot.send_photo(call.message.chat.id, open('./Images/Game/right_door_open.jpg', 'rb'))
                        
                        elif night == 4:
                            if hover_door_right == True:

                                bot.send_photo(call.message.chat.id, open('./Images/Game/right_door_hover.jpg', 'rb'))

                            else:

                                bot.send_photo(call.message.chat.id, open('./Images/Game/right_door_open.jpg', 'rb'))

                        elif night == 5:

                            bot.send_photo(call.message.chat.id, open('./Images/Game/right_door_open.jpg', 'rb'))
                         
                        bot.send_message(call.message.chat.id, '–î–≤–µ—Ä—å –æ—Ç–∫—Ä—ã—Ç–∞.', reply_markup=markup)

                    else: #–î–≤–µ—Ä—å –∑–∞–∫—Ä—ã—Ç–∞

                        right_door_timer = 100

                        item1 = types.InlineKeyboardButton('–û—Ç–∫—Ä—ã—Ç—å', callback_data='change_right_door_statement')   
                        markup.add(item1, item2)

                        bot.send_photo(call.message.chat.id, open('./Images/Game/right_door_closed.jpg', 'rb'))
                        bot.send_message(call.message.chat.id, '–î–≤–µ—Ä—å –∑–∞–∫—Ä—ã—Ç–∞.', reply_markup=markup)
                else: 

                    markup.add(item2) 
                    bot.send_message(call.message.chat.id, f'–ü–ª–∞–Ω—à–µ—Ç —Ä–∞–∑—Ä—è–∂–µ–Ω! –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –±–∞—Ç–∞—Ä–µ—é –º–æ–∂–Ω–æ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω–µ!', reply_markup=markup)
            


            #–õ–æ–≥–∏–∫–∞ –º–∞–≥–∞–∑–∏–Ω–∞



            elif call.data == "shop_assortiment": #–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–≥—Ä–æ–∫—É –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç

                markup = types.InlineKeyboardMarkup(row_width=1)
                item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='button_shop')

                for i in range(0, len(db_manager.show_assortiment())):

                    s =  'check_coins' + '|' + str(i)

                    item2 = types.InlineKeyboardButton(f'{db_manager.show_assortiment()[i][0]}        {db_manager.show_prices()[i][0]}üí∞        –û—Å—Ç–∞–ª–æ—Å—å {db_manager.show_count()[i][0]} —à—Ç—É–∫!', callback_data=s)
                    markup.add(item2)

                markup.add(item1)
                bot.send_photo(call.message.chat.id, open('./Images/Game/shop_assortiment.jpg', 'rb')) 
                bot.send_message(call.message.chat.id, f'–£ –≤–∞—Å {db_manager.show_coins("test")}üí∞', reply_markup=markup)
            
            elif 'check_coins' in call.data: #–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ –ø–æ–∫—É–ø–∫–æ–π

                second_param = call.data.split('|')[1]
                
                #–ü—Ä–æ–≤–µ—Ä—è–µ–º, —Ö–≤–∞—Ç–∏—Ç –ª–∏ –¥–µ–Ω–µ–≥ —É –∏–≥—Ä–æ–∫–∞
                if int(db_manager.show_coins("test")) >= int(db_manager.show_prices()[int(second_param)][0]) and int(db_manager.show_count()[int(second_param)][0]) > 0:
                    
                    markup = types.InlineKeyboardMarkup(row_width=1)

                    s = 'sucsessfull_shopping'  + '|' + call.data.split('|')[1]

                    item1 = types.InlineKeyboardButton('–î–∞', callback_data=s)   
                    item2 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='button_shop') 
                    markup.add(item1, item2)   

                    bot.send_message(call.message.chat.id, f'–í—ã —É–≤–µ—Ä–µ–Ω—ã?', reply_markup=markup)  

                elif int(db_manager.show_count()[int(second_param)][0]) == 0: #–¢–æ–≤–∞—Ä –∑–∞–∫–æ–Ω—á–∏–ª—Å—è

                    markup = types.InlineKeyboardMarkup(row_width=1)     
                    item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='button_shop')     
                    markup.add(item1)

                    bot.send_message(call.message.chat.id, f'–¢–æ–≤–∞—Ä –∑–∞–∫–æ–Ω—á–∏–ª—Å—è!', reply_markup=markup)  

                else: #–ù–∞–∑–∞–¥

                    markup = types.InlineKeyboardMarkup(row_width=1)     
                    item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='button_shop')     
                    markup.add(item1)

                    bot.send_message(call.message.chat.id, f'–£ –≤–∞—Å –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤!', reply_markup=markup)  

            elif 'sucsessfull_shopping' in call.data:  #–ò–≥—Ä–æ–∫ –∫—É–ø–∏–ª –≤–µ—â—å

                second_param = call.data.split('|')[1]

                markup = types.InlineKeyboardMarkup(row_width=1)
                item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='button_shop')
                markup.add(item1)

                if db_manager.show_assortiment()[int(second_param)][0] == 'Battery': #–ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –∫—É–ø–∏–ª –±–∞—Ç–∞—Ä–µ–π–∫—É

                    battery_statement = True
                    battery_timer = 100
                    battery = 4

                elif db_manager.show_assortiment()[int(second_param)][0] == 'Tablet': #–ï—Å–ª–∏ –∏–≥—Ä–æ–∫ –∫—É–ø–∏–ª –Ω–æ–≤—ã–π –ø–ª–∞–Ω—à–µ—Ç

                    tablet_statement = True
                    


                les_coins = int(db_manager.show_coins("test"))-int(db_manager.show_prices()[int(second_param)][0])
                les_value = int(db_manager.show_count()[int(second_param)][0])-1

                db_manager.update_coins("test", str(les_coins))
                db_manager.update_assortiment(db_manager.show_assortiment()[int(second_param)][0], str(les_value))


                bot.send_message(call.message.chat.id, f'–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ {db_manager.show_assortiment()[int(second_param)][0]}!', reply_markup=markup)  



            #–ù–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞–∑–∞–¥



            elif call.data == "back2": #–í–æ–∑–≤—Ä–∞—â–µ–Ω–∏–µ –≤ –∫–æ–º–Ω–∞—Ç—É –æ—Ö—Ä–∞–Ω–Ω–∏–∫–∞

                markup = types.InlineKeyboardMarkup(row_width=2)
                item1 = types.InlineKeyboardButton('–ö–∞–º–µ—Ä—ãüì∏', callback_data='button_camera')
                item2 = types.InlineKeyboardButton('–ß–∞—Å—ã‚è∞', callback_data='button_clocks')
                item3 = types.InlineKeyboardButton('–õ–µ–≤–∞—è –¥–≤–µ—Ä—åüö™', callback_data='button_left_door')
                item4 = types.InlineKeyboardButton('–ü—Ä–∞–≤–∞—è –¥–≤–µ—Ä—åüö™', callback_data='button_right_door')
                item5 = types.InlineKeyboardButton('–ú–∞–≥–∞–∑–∏–Ωüè¨', callback_data='button_shop')
                markup.add(item1, item2, item3, item4, item5)

                bot.send_photo(call.message.chat.id, open('./Images/Game/security_room.jpeg', 'rb'), reply_markup=markup)



            #–õ–æ–≥–∏–∫–∞ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è —Ä–æ–±–æ—Ç–æ–≤



            if go_cleaner == True: #–£–±–æ—Ä—â–∏–∫
                if cleaner_storage:

                    b = randint(0, 11)
                    ost = b%2

                    if ost == 0: 

                        cleaner_guest = True
                        cleaner_storage = False
                        go_cleaner = False

                        return 
                    
                    else:

                        cleaner_vine = True
                        cleaner_storage = False
                        go_cleaner = False 

                        return 

                else:

                    if cleaner_guest:

                        a = randint(0, 3)

                        if a == 0:

                            cleaner_door_left = True
                            cleaner_guest = False
                            go_cleaner = False

                            return 
                        
                        else: 

                            cleaner_vine = True
                            cleaner_guest = False
                            go_cleaner = False 

                            return 

                    elif cleaner_vine:

                        a = randint(0, 5)

                        if a == 0:

                            cleaner_door_right = True
                            cleaner_vine = False
                            go_cleaner = False

                            return 
                        
                        elif a == 2:

                            cleaner_vent = True
                            cleaner_vine = False
                            go_cleaner = False

                            return
                        
                        else:

                            cleaner_guest = True
                            cleaner_vine = False
                            go_cleaner = False 

                            return 

                    elif cleaner_door_right:
                        if right_door_statement == False:

                            time.sleep(5)

                            cleaner_vine = True
                            cleaner_door_right = False
                            go_cleaner = False 

                            return 
                    
                    elif cleaner_door_left:
                        if left_door_statement == False:

                            time.sleep(5)

                            cleaner_guest = True
                            cleaner_door_left = False
                            go_cleaner = False 

                            return 

                    elif cleaner_vent:
                        if ventilation_statement == False:

                            time.sleep(5)

                            cleaner_vine = True
                            cleaner_vent = False
                            go_cleaner = False 

                            return


            if go_—Årazy == True: #–ü—Å–∏—Ö
                if crazy_storage:

                    b = randint(0, 11)
                    ost = b%2

                    if ost == 0: 

                        cleaner_guest = True
                        cleaner_storage = False
                        go_—Årazy = False

                        return 
                    
                    else:

                        cleaner_vine = True
                        cleaner_storage = False
                        go_—Årazy = False 

                        return 

                else:

                    if —Årazy_guest:

                        a = randint(0, 4)

                        if a == 0:

                            crazy_door_left = True
                            —Årazy_guest = False
                            go_—Årazy = False

                            return 
                        
                        elif a == 3:

                            crazy_storage = True
                            —Årazy_guest = False
                            go_—Årazy = False

                            return 

                        else: 

                            crazy_vine = True
                            —Årazy_guest = False
                            go_—Årazy = False

                            return 

                    elif crazy_vine:

                        a = randint(0, 6)

                        if a == 0:

                            crazy_door_right = True
                            crazy_vine = False
                            go_—Årazy = False

                            return 
                        
                        elif a == 3:

                            crazy_storage = True
                            crazy_vine = False
                            go_—Årazy = False

                            return 
                        
                        elif a == 2:

                            crazy_vent = True
                            crazy_vine = False
                            go_—Årazy = False

                            return
                        
                        else:

                            crazy_guest = True
                            crazy_vine = False
                            go_—Årazy = False 

                            return 

                    elif crazy_door_right:
                        if right_door_statement == False:

                            time.sleep(5)

                            crazy_vine = True
                            crazy_door_right = False
                            go_—Årazy = False 

                            return 
                    
                    elif crazy_door_left:
                        if left_door_statement == False:

                            time.sleep(5)

                            —Årazy_guest = True
                            crazy_door_left = False
                            go_—Årazy = False 

                            return 

                    elif crazy_vent:
                        if ventilation_statement == False:

                            time.sleep(5)

                            crazy_vine = True
                            crazy_vent = False
                            go_—Årazy = False 

                            return 


            if go_barmen == True: #–ë–∞—Ä–º–µ–Ω
                if barmen_storage:

                    b = randint(0, 11)
                    ost = b%2

                    if ost == 0: 

                        barmen_guest = True
                        barmen_storage = False
                        go_barmen = False

                        return 
                    
                    else:

                        barmen_vine = True
                        barmen_storage = False
                        go_barmen = False 

                        return 

                else:

                    if barmen_guest:

                        a = randint(0, 3)

                        if a == 0:

                            barmen_door_left = True
                            barmen_guest = False
                            go_barmen = False

                            return 
                        
                        else: 

                            barmen_vine = True
                            barmen_guest = False
                            go_barmen = False

                            return 

                    elif barmen_vine:

                        a = randint(0, 5)
                        
                        zero_coins = randint (0, 11)
                        if zero_coins == 7:

                            markup = types.InlineKeyboardMarkup(row_width=1)
                            item1 = types.InlineKeyboardButton('–ù–∞–∑–∞–¥->', callback_data='back2')
                            markup.add(item1)

                            db_manager.update_coins("test", "0")
                            bot.send_photo(call.message.chat.id, open('./Images/Game/broken_kamera.jpg', 'rb'))
                            bot.send_message(call.message.chat.id, '*–ø—à-–ø—à-–ø—à-–ø—à* –•–ê... –•–ê.. –•–ê.. –Ø –ó–ê–ë–†–ê–õ... –í–°–ï.. –¢–í–û–ò –î–ï–ù–¨–ì–ò! –•–ê!.. –•–ê! *–ø—à-–ø—à-–ø—à*', reply_markup=markup)  

                            
                        
                        if a == 0:

                            barmen_door_right = True
                            barmen_vine = False
                            go_barmen = False

                            return 
                        
                        elif a == 2:

                            barmen_vent = True
                            barmen_vine = False
                            go_barmen = False

                            return
                        
                        else:

                            barmen_guest = True
                            barmen_vine = False
                            go_barmen = False 

                            return 

                    elif barmen_door_right:
                        if right_door_statement == False:

                            time.sleep(5)

                            barmen_vine = True
                            barmen_door_right = False
                            go_barmen = False 

                            return 
                    
                    elif barmen_door_left:
                        if left_door_statement == False:

                            time.sleep(5)

                            barmen_guest = True
                            barmen_door_left = False
                            go_barmen = False 

                            return 

                    elif barmen_vent:
                        if ventilation_statement == False:

                            time.sleep(5)

                            barmen_vine = True
                            barmen_vent = False
                            go_barmen = False 

                            return                         
           

            if go_hoverboard == True: #–•–æ–≤–µ—Ä–±–æ—Ä–¥
                
                if hover_storage:

                    b = randint(0, 11)
                    ost = b%2

                    if ost == 0: 

                        broke = randint (0, 11)
                        if broke == 6:

                            tablet_statement = False

                        hover_guest = True
                        hover_storage = False
                        go_hoverboard = False

                        return 
                    
                    else:

                        broke = randint (0, 11)
                        if broke == 6:

                            tablet_statement = False

                        hover_vine = True
                        hover_storage = False
                        go_hoverboard = False 

                        return 

                else:

                    if hover_guest:

                        a = randint(0, 3)

                        if a == 0:

                            broke = randint (0, 11)
                            if broke == 6:

                                tablet_statement = False

                            hover_door_left = True
                            hover_guest = False
                            go_hoverboard = False

                            return 
                        
                        else: 

                            broke = randint (0, 11)
                            if broke == 6:

                                tablet_statement = False

                            hover_vine = True
                            hover_guest = False
                            go_hoverboard = False

                            return 

                    elif hover_vine:

                        a = randint(0, 5)

                        if a == 0:

                            broke = randint (0, 11)
                            if broke == 6:

                                tablet_statement = False

                            hover_door_right = True
                            hover_vine = False
                            go_hoverboard = False

                            return 
                        
                        elif a == 2:

                            broke = randint (0, 11)
                            if broke == 6:

                                tablet_statement = False

                            hover_vent = True
                            hover_vine = False
                            go_hoverboard = False

                            return
                        
                        else:

                            broke = randint (0, 11)
                            if broke == 6:

                                tablet_statement = False

                            hover_guest = True
                            hover_vine = False
                            go_hoverboard = False 

                            return 

                    elif hover_door_right:
                        if right_door_statement == False:

                            time.sleep(5)
                                                        
                            broke = randint (0, 11)
                            if broke == 6:

                                tablet_statement = False
                            hover_vine = True
                            hover_door_right = False
                            go_hoverboard = False 

                            return 
                    
                    elif hover_door_left:
                        if left_door_statement == False:

                            time.sleep(5)

                            hover_guest = True
                            hover_door_left = False
                            go_hoverboard = False 

                            return 

                    elif barmen_vent:
                        if ventilation_statement == False:

                            time.sleep(5)

                            hover_vine = True
                            hover_vent = False
                            go_hoverboard = False 

                            return                         


            if go_terminator == True: #–¢–ï–†–ú–ò–ù–ê–¢–û–†
                if terminator_fifth_room == True:
                    time.sleep(60)
                    a = randint(1, 10)
                    if a == 2 or a == 4 or a == 6:
                        terminator_vent = True
                        if ventilation_statement == False:
                            time.sleep(10)
                            go_terminator = False
                            terminator_vent = False
                            terminator_fifth_room = True
                            if ventilation_statement != True:
                                return
                            else:
                                time.sleep(8)
                                if ventilation_statement == False:
                                    time.sleep(5)
                                    if ventilation_statement == False:
                                        go_terminator = False
                                        terminator_vent = False
                                        terminator_fifth_room = True
                                        return
                                    else:
                                        end_bad = True
                                        return
                                else:
                                    time.sleep(1)
                                    end_bad = True
                                    return                      
                        elif ventilation_statement == True:
                            time.sleep(8)
                            if ventilation_statement == False:
                                time.sleep(5)
                                if ventilation_statement == False:
                                    go_terminator = False
                                    terminator_vent = False
                                    terminator_fifth_room = True
                                    return
                                else:
                                    end_bad = True
                                    return
                            else:
                                time.sleep(1)
                                end_bad = True
                                return                      
                    tablet_broke = randint(0, 5)
                    if tablet_broke == 3:
                        tablet_statement = False             
                                                                    


            #–û–∫–æ–Ω—á–∞–Ω–∏–µ –∏–≥—Ä—ã (–Ω–æ—á–∏)



            if end == True: #–•–æ—Ä–æ—à–∏–π –∫–æ–Ω–µ—Ü

                username = call.message.from_user.username
                db_manager.add_coins_wins(username, "1", str(int(db_manager.show_coins("test"))+10))

                timer = 0 
                game_started = False
                go_cleaner = False
                night += 1

                markup = types.InlineKeyboardMarkup(row_width=2)

                if night >= 5:

                    item1 = types.InlineKeyboardButton('–ú–µ–Ω—é', callback_data='back1')

                else: 

                    item1 = types.InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å –¥–∞–ª—å—à–µ', callback_data='button_game')

                item2 = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='button_profile')
                markup.add(item1, item2)

                bot.send_photo(call.message.chat.id, open('./Images/Game/win.jpg', 'rb'))
                bot.send_message(call.message.chat.id, "–í—ã –ø–æ–±–µ–¥–∏–ª–∏! (+1 –ø–æ–±–µ–¥–∞, +10 –º–æ–Ω–µ—Ç)", reply_markup=markup)

                if night >= 5:

                    bot.send_message(call.message.chat.id, "–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º, –≤—ã –ø—Ä–æ—à–ª–∏ –∏–≥—Ä—É! –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ –≤–∫–ª–∞–¥–∫—É –±–æ–Ω—É—Å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.", reply_markup=markup)
                
                else:

                    bot.send_message(call.message.chat.id, "–í—ã –ø–æ–±–µ–¥–∏–ª–∏! –í–∞—à–∞ –∑–∞—Ä–ø–ª–∞—Ç–∞ —Ä–∞–≤–Ω–∞ 3üí∞", reply_markup=markup)



            elif end == True and end_bad == True: #–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞

                bot.send_message(call.message.chat.id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è —Ç–æ –æ—à–∏–±–∫–∞, –∏–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞.")
                game_started = False


            elif cleaner_door_right == True and right_door_statement == True and night == 1: #–†–æ–±–æ—Ç —É –ø—Ä–∞–≤–æ–π –¥–≤–µ—Ä–∏

                time.sleep(5) #–î–∞—ë–º –∏–≥—Ä–æ–∫—É —à–∞–Ω—Å –≤—ã–∂–∏—Ç—å
                
                if right_door_statement != False: #–ï—Å–ª–∏ –∏–≥–æ–∫ –Ω–µ —É—Å–ø–µ–ª –∑–∞–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å, —Ç–æ —Ä–æ–±–æ—Ç –µ–≥–æ —É–±–∏–≤–∞–µ—Ç

                    timer = 0 
                    game_started = False

                    markup = types.InlineKeyboardMarkup(row_width=2)
                    item1 = types.InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞', callback_data='button_game')
                    item2 = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='button_profile')
                    markup.add(item1,item2)

                    bot.send_photo(call.message.chat.id, open('./Images/Game/loose.jpg', 'rb'))
                    bot.send_message(call.message.chat.id, "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!", reply_markup=markup)

                else:

                    go_cleaner = True


            elif cleaner_door_left == True and left_door_statement == True and night == 1: #–†–æ–±–æ—Ç —É –ª–µ–≤–æ–π –¥–≤–µ—Ä–∏

                time.sleep(5) #–î–∞—ë–º –∏–≥—Ä–æ–∫—É —à–∞–Ω—Å –≤—ã–∂–∏—Ç—å

                if left_door_statement != False: #–ï—Å–ª–∏ –∏–≥–æ–∫ –Ω–µ —É—Å–ø–µ–ª –∑–∞–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å, —Ç–æ —Ä–æ–±–æ—Ç –µ–≥–æ —É–±–∏–≤–∞–µ—Ç

                    timer = 0 
                    game_started = False

                    markup = types.InlineKeyboardMarkup(row_width=2)
                    item1 = types.InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞', callback_data='button_game')
                    item2 = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='button_profile')
                    markup.add(item1,item2)

                    bot.send_photo(call.message.chat.id, open('./Images/Game/loose.jpg', 'rb'))
                    bot.send_message(call.message.chat.id, "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!", reply_markup=markup)

                else:

                    go_cleaner = True


            elif cleaner_vent == True and ventilation_statement == True and night == 1: #–†–æ–±–æ—Ç –≤ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏

                time.sleep(5) #–î–∞—ë–º –∏–≥—Ä–æ–∫—É —à–∞–Ω—Å –≤—ã–∂–∏—Ç—å

                if ventilation_statement != False: #–ï—Å–ª–∏ –∏–≥–æ–∫ –Ω–µ —É—Å–ø–µ–ª –∑–∞–∫—Ä—ã—Ç—å –≤–µ–Ω—Ç–∏–ª—è—Ü–∏—é, —Ç–æ —Ä–æ–±–æ—Ç –µ–≥–æ —É–±–∏–≤–∞–µ—Ç

                    timer = 0 
                    game_started = False

                    markup = types.InlineKeyboardMarkup(row_width=2)
                    item1 = types.InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞', callback_data='button_game')
                    item2 = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='button_profile')
                    markup.add(item1,item2)

                    bot.send_photo(call.message.chat.id, open('./Images/Game/loose.jpg', 'rb'))
                    bot.send_message(call.message.chat.id, "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!", reply_markup=markup)

                else:

                    go_cleaner = True
            

            elif barmen_door_right == True and right_door_statement == True and night == 3: #–†–æ–±–æ—Ç —É –ø—Ä–∞–≤–æ–π –¥–≤–µ—Ä–∏

                time.sleep(5) #–î–∞—ë–º –∏–≥—Ä–æ–∫—É —à–∞–Ω—Å –≤—ã–∂–∏—Ç—å
                
                if right_door_statement != False: #–ï—Å–ª–∏ –∏–≥–æ–∫ –Ω–µ —É—Å–ø–µ–ª –∑–∞–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å, —Ç–æ —Ä–æ–±–æ—Ç –µ–≥–æ —É–±–∏–≤–∞–µ—Ç

                    timer = 0 
                    game_started = False

                    markup = types.InlineKeyboardMarkup(row_width=2)
                    item1 = types.InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞', callback_data='button_game')
                    item2 = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='button_profile')
                    markup.add(item1,item2)

                    bot.send_photo(call.message.chat.id, open('./Images/Game/loose.jpg', 'rb'))
                    bot.send_message(call.message.chat.id, "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!", reply_markup=markup)

                else:

                    go_barmen = True


            elif barmen_door_left == True and left_door_statement == True and night == 3: #–†–æ–±–æ—Ç —É –ª–µ–≤–æ–π –¥–≤–µ—Ä–∏

                time.sleep(5) #–î–∞—ë–º –∏–≥—Ä–æ–∫—É —à–∞–Ω—Å –≤—ã–∂–∏—Ç—å

                if left_door_statement != False: #–ï—Å–ª–∏ –∏–≥–æ–∫ –Ω–µ —É—Å–ø–µ–ª –∑–∞–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å, —Ç–æ —Ä–æ–±–æ—Ç –µ–≥–æ —É–±–∏–≤–∞–µ—Ç

                    timer = 0 
                    game_started = False

                    markup = types.InlineKeyboardMarkup(row_width=2)
                    item1 = types.InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞', callback_data='button_game')
                    item2 = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='button_profile')
                    markup.add(item1,item2)

                    bot.send_photo(call.message.chat.id, open('./Images/Game/loose.jpg', 'rb'))
                    bot.send_message(call.message.chat.id, "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!", reply_markup=markup)

                else:

                    go_cleaner = True


            elif barmen_vent == True and ventilation_statement == True and night == 3: #–†–æ–±–æ—Ç –≤ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏

                time.sleep(5) #–î–∞—ë–º –∏–≥—Ä–æ–∫—É —à–∞–Ω—Å –≤—ã–∂–∏—Ç—å

                if ventilation_statement != False: #–ï—Å–ª–∏ –∏–≥–æ–∫ –Ω–µ —É—Å–ø–µ–ª –∑–∞–∫—Ä—ã—Ç—å –≤–µ–Ω—Ç–∏–ª—è—Ü–∏—é, —Ç–æ —Ä–æ–±–æ—Ç –µ–≥–æ —É–±–∏–≤–∞–µ—Ç

                    timer = 0 
                    game_started = False

                    markup = types.InlineKeyboardMarkup(row_width=2)
                    item1 = types.InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞', callback_data='button_game')
                    item2 = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='button_profile')
                    markup.add(item1,item2)

                    bot.send_photo(call.message.chat.id, open('./Images/Game/loose.jpg', 'rb'))
                    bot.send_message(call.message.chat.id, "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!", reply_markup=markup)

                else:

                    go_cleaner = True
            

            elif crazy_door_right == True and right_door_statement == True and night == 2: #–†–æ–±–æ—Ç —É –ø—Ä–∞–≤–æ–π –¥–≤–µ—Ä–∏

                time.sleep(5) #–î–∞—ë–º –∏–≥—Ä–æ–∫—É —à–∞–Ω—Å –≤—ã–∂–∏—Ç—å
                
                if right_door_statement != False: #–ï—Å–ª–∏ –∏–≥–æ–∫ –Ω–µ —É—Å–ø–µ–ª –∑–∞–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å, —Ç–æ —Ä–æ–±–æ—Ç –µ–≥–æ —É–±–∏–≤–∞–µ—Ç

                    timer = 0 
                    game_started = False

                    markup = types.InlineKeyboardMarkup(row_width=2)
                    item1 = types.InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞', callback_data='button_game')
                    item2 = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='button_profile')
                    markup.add(item1,item2)

                    bot.send_photo(call.message.chat.id, open('./Images/Game/loose.jpg', 'rb'))
                    bot.send_message(call.message.chat.id, "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!", reply_markup=markup)

                else:

                    go_—Årazy = True


            elif crazy_door_left == True and left_door_statement == True and night == 2: #–†–æ–±–æ—Ç —É –ª–µ–≤–æ–π –¥–≤–µ—Ä–∏

                time.sleep(15) #–î–∞—ë–º –∏–≥—Ä–æ–∫—É —à–∞–Ω—Å –≤—ã–∂–∏—Ç—å

                if left_door_statement != False: #–ï—Å–ª–∏ –∏–≥–æ–∫ –Ω–µ —É—Å–ø–µ–ª –∑–∞–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å, —Ç–æ —Ä–æ–±–æ—Ç –µ–≥–æ —É–±–∏–≤–∞–µ—Ç

                    timer = 0 
                    game_started = False

                    markup = types.InlineKeyboardMarkup(row_width=2)
                    item1 = types.InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞', callback_data='button_game')
                    item2 = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='button_profile')
                    markup.add(item1,item2)

                    bot.send_photo(call.message.chat.id, open('./Images/Game/loose.jpg', 'rb'))
                    bot.send_message(call.message.chat.id, "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!", reply_markup=markup)

                else:

                    go_—Årazy = True


            elif crazy_vent == True and ventilation_statement == True and night == 2: #–†–æ–±–æ—Ç –≤ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏

                time.sleep(15) #–î–∞—ë–º –∏–≥—Ä–æ–∫—É —à–∞–Ω—Å –≤—ã–∂–∏—Ç—å

                if ventilation_statement != False: #–ï—Å–ª–∏ –∏–≥–æ–∫ –Ω–µ —É—Å–ø–µ–ª –∑–∞–∫—Ä—ã—Ç—å –≤–µ–Ω—Ç–∏–ª—è—Ü–∏—é, —Ç–æ —Ä–æ–±–æ—Ç –µ–≥–æ —É–±–∏–≤–∞–µ—Ç

                    timer = 0 
                    game_started = False

                    markup = types.InlineKeyboardMarkup(row_width=2)
                    item1 = types.InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞', callback_data='button_game')
                    item2 = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='button_profile')
                    markup.add(item1,item2)

                    bot.send_photo(call.message.chat.id, open('./Images/Game/loose.jpg', 'rb'))
                    bot.send_message(call.message.chat.id, "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!", reply_markup=markup)

                else:

                    go_—Årazy= True


            elif hover_door_right == True and right_door_statement == True and night == 4: #–†–æ–±–æ—Ç —É –ø—Ä–∞–≤–æ–π –¥–≤–µ—Ä–∏

                time.sleep(15) #–î–∞—ë–º –∏–≥—Ä–æ–∫—É —à–∞–Ω—Å –≤—ã–∂–∏—Ç—å
                
                if right_door_statement != False: #–ï—Å–ª–∏ –∏–≥–æ–∫ –Ω–µ —É—Å–ø–µ–ª –∑–∞–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å, —Ç–æ —Ä–æ–±–æ—Ç –µ–≥–æ —É–±–∏–≤–∞–µ—Ç

                    timer = 0 
                    game_started = False

                    markup = types.InlineKeyboardMarkup(row_width=2)
                    item1 = types.InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞', callback_data='button_game')
                    item2 = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='button_profile')
                    markup.add(item1,item2)

                    bot.send_photo(call.message.chat.id, open('./Images/Game/loose.jpg', 'rb'))
                    bot.send_message(call.message.chat.id, "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!", reply_markup=markup)

                else:

                    go_—Årazy = True


            elif hover_door_left == True and left_door_statement == True and night == 4: #–†–æ–±–æ—Ç —É –ª–µ–≤–æ–π –¥–≤–µ—Ä–∏

                time.sleep(15) #–î–∞—ë–º –∏–≥—Ä–æ–∫—É —à–∞–Ω—Å –≤—ã–∂–∏—Ç—å

                if left_door_statement != False: #–ï—Å–ª–∏ –∏–≥–æ–∫ –Ω–µ —É—Å–ø–µ–ª –∑–∞–∫—Ä—ã—Ç—å –¥–≤–µ—Ä—å, —Ç–æ —Ä–æ–±–æ—Ç –µ–≥–æ —É–±–∏–≤–∞–µ—Ç

                    timer = 0 
                    game_started = False

                    markup = types.InlineKeyboardMarkup(row_width=2)
                    item1 = types.InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞', callback_data='button_game')
                    item2 = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='button_profile')
                    markup.add(item1,item2)

                    bot.send_photo(call.message.chat.id, open('./Images/Game/loose.jpg', 'rb'))
                    bot.send_message(call.message.chat.id, "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!", reply_markup=markup)

                else:

                    go_—Årazy = True


            elif hover_vent == True and ventilation_statement == True and night == 4: #–†–æ–±–æ—Ç –≤ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏

                time.sleep(15) #–î–∞—ë–º –∏–≥—Ä–æ–∫—É —à–∞–Ω—Å –≤—ã–∂–∏—Ç—å

                if ventilation_statement != False: #–ï—Å–ª–∏ –∏–≥–æ–∫ –Ω–µ —É—Å–ø–µ–ª –∑–∞–∫—Ä—ã—Ç—å –≤–µ–Ω—Ç–∏–ª—è—Ü–∏—é, —Ç–æ —Ä–æ–±–æ—Ç –µ–≥–æ —É–±–∏–≤–∞–µ—Ç

                    timer = 0 
                    game_started = False

                    markup = types.InlineKeyboardMarkup(row_width=2)
                    item1 = types.InlineKeyboardButton('–ò–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞', callback_data='button_game')
                    item2 = types.InlineKeyboardButton('–ü—Ä–æ—Ñ–∏–ª—å', callback_data='button_profile')
                    markup.add(item1,item2)

                    bot.send_photo(call.message.chat.id, open('./Images/Game/loose.jpg', 'rb'))
                    bot.send_message(call.message.chat.id, "–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!", reply_markup=markup)

                else:

                    go_hoverboard = True



#–§—É–Ω–∫—Ü–∏–∏ –∏ –º–µ—Ö–∞–Ω–∏–∫–∏




def bot_thread(): #–ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ –±–æ—Ç–∞

    bot.infinity_polling(print("Bot started."), none_stop=True)


def timer_thread(): #–ú–µ—Ö–∞–Ω–∏–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏

    global end
    global game_started

    global timer
    global vent_timer
    global right_door_timer
    global left_door_timer

    global left_door_statement
    global right_door_statement
    global ventilation_statement

    while True:

        if game_started != True:

            pass

        else:

            time.sleep(1)
            timer -= 1

            if timer == 0:

                end = True
                break

            #–û—Ç–∫—Ä—ã—Ç–∏–µ –¥–≤–µ—Ä–µ–π –∏ –≤–µ–Ω—Ç–∏–ª—è—Ü–∏–∏ –µ—Å–ª–∏ –æ–Ω–∏ —Å–ª–∏—à–∫–æ–º –¥–æ–ª–≥–æ –∑–∞–∫—Ä—ã—Ç—ã

            if right_door_timer > 0:
                if right_door_statement == False:
                        
                        right_door_timer -= 1

            else:

                right_door_statement = True

            if left_door_timer > 0:
                if left_door_statement == False:

                    left_door_timer -= 1
            
            else:

                left_door_statement = True

            
            if vent_timer > 0:
                if ventilation_statement == False:

                    vent_timer -= 1
            
            else:

                ventilation_statement = True


def timing_thread(): #–ú–µ—Ö–∞–Ω–∏–∫–∞ –ø–µ—Ä–µ–¥–≤–∏–∂–µ–Ω–∏—è —Ä–æ–±–æ—Ç–æ–≤—ã

    global timer, go_cleaner, go_hoverboard, go_—Årazy, go_barmen, night, game_started, go_terminator

    while True:

        if game_started != True: #–ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–∞—á–∞–ª–∞—Å—å –ª–∏ –∏–≥—Ä–∞

            pass

        else:


            if night == 1:  #–ù–æ—á—å 1 (–£–±–æ—Ä—â–∏–∫)
                go_barmen = False
                go_crazy = False
                go_hoverboard = False
                if timer >= 541: #–†–∞–Ω–¥–æ–º –¥–æ 1 —á–∞—Å–∞ –Ω–æ—á–∏(–≤ –∏–≥—Ä–µ) –ø–æ–π–¥–µ—Ç –ª–∏ —É–±–æ—Ä—â–∏–∫ –∏–ª–∏ –Ω–µ—Ç(—à–∞–Ω—Å –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏–π)

                    time.sleep(5)
                    a = randint(1, 100)

                    if a == 50:

                        go_cleaner = True
                        print(go_cleaner)

                    else: 

                        print(timer)

                elif timer <= 540 and timer > 450: #–†–∞–Ω–¥–æ–º –ø–æ–π–¥–µ—Ç –ª–∏ —É–±–æ—Ä—â–∏–∫ –≤ —á–∞—Å –Ω–æ—á–∏.

                    time.sleep(5)
                    a = randint(1, 5)

                    if a == 2 or a == 3:

                        go_cleaner = True
                        print(go_cleaner)

                    else:

                        print('z')
                        time.sleep(5)
                        go_cleaner = False
                        print(timer)

                elif timer <= 450 and timer > 360: #–†–∞–Ω–¥–æ–º –ø–æ–π–¥–µ—Ç –ª–∏ —É–±–æ—Ä—â–∏–∫ –≤ 2 –Ω–æ—á–∏.
                    
                    time.sleep(5)
                    a = randint(1, 5)

                    if a == 2 or 3:

                        go_cleaner = True

                    else:

                        time.sleep(5)
                        a = randint(1,4)

                        if a == 2 or a == 3:

                            go_cleaner == True
                            print(go_cleaner)

                        else:

                            print('i')
                            go_cleaner = False
                            print(timer)

                elif timer <= 360 and timer > 80: #–†–∞–Ω–¥–æ–º –ø–æ–π–¥–µ—Ç –ª–∏ —É–±–æ—Ä—â–∏–∫ –≤ 3, 4, 5 –Ω–æ—á–∏.

                    time.sleep(5)
                    a = randint(1, 5)

                    if a == 2 or a == 3:

                        go_cleaner = True
                        print(go_cleaner)

                    else:

                        print('f')
                        time.sleep(5)
                        go_cleaner = False
                        print(timer)

                elif timer <= 80: #–†–∞–Ω–¥–æ–º –ø–æ–π–¥–µ—Ç –ª–∏ —É–±–æ—Ä—â–∏–∫ –≤ 6 –Ω–æ—á–∏.

                    time.sleep(5)
                    a = randint(1, 4)

                    if a == 2 or a == 3 or a == 4:

                        go_cleaner = True

                    else:

                        print('m')
                        time.sleep(5)
                        go_cleaner = False
                        print(timer)


            elif night == 2: #–ù–æ—á—å 2 (–ü—Å–∏—Ö)
                    go_barmen = False
                    go_cleaner = False
                    go_hoverboard = False
                    if timer >= 541: #–†–∞–Ω–¥–æ–º –¥–æ 1 —á–∞—Å–∞ –Ω–æ—á–∏(–≤ –∏–≥—Ä–µ) –ø–æ–π–¥–µ—Ç –ª–∏ –ø—Å–∏—Ö –∏–ª–∏ –Ω–µ—Ç(—à–∞–Ω—Å –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏–π)
                        
                        time.sleep(3)
                        a = randint(1, 100)
                        
                        if a == 50:
                            
                            go_—Årazy = True
                            print(go_—Årazy)

                        else: 

                            print(timer)

                    elif timer <= 540 and timer > 450: #–†–∞–Ω–¥–æ–º –ø–æ–π–¥–µ—Ç –ª–∏ –ø—Å–∏—Ö –≤ —á–∞—Å –Ω–æ—á–∏.
                        
                        time.sleep(3)
                        a = randint(1, 5)
                        
                        if a == 2 or a == 3:
                            
                            go_—Årazy = True
                            print(go_—Årazy)

                        else:
                            
                            print('z')
                            time.sleep(3)
                            go_—Årazy = False
                            print(timer)

                    elif timer <= 450 and timer > 360: #–†–∞–Ω–¥–æ–º –ø–æ–π–¥–µ—Ç –ª–∏ —É–±–æ—Ä—â–∏–∫ –≤ 2 –Ω–æ—á–∏.

                        time.sleep(3)
                        a = randint(1, 5)

                        if a == 2 or 3:

                            go_—Årazy = True

                        else:

                            time.sleep(3)
                            a = randint(1,4)

                            if a == 2 or a == 3:

                                go_—Årazy == True
                                print(go_—Årazy)

                            else:

                                print('i')
                                go_—Årazy = False
                                print(timer)

                    elif timer <= 360 and timer > 80: #–†–∞–Ω–¥–æ–º –ø–æ–π–¥–µ—Ç –ª–∏ —É–±–æ—Ä—â–∏–∫ –≤ 3, 4, 5 –Ω–æ—á–∏.

                        time.sleep(3)
                        a = randint(1, 5)

                        if a == 2 or a == 3:

                            go_—Årazy = True
                            print(go_—Årazy)

                        else:

                            print('f')
                            time.sleep(3)
                            go_—Årazy = False
                            print(timer)

                    elif timer <= 80:

                        time.sleep(3)
                        a = randint(1, 4)

                        if a == 2 or a == 3 or a == 4: #–†–∞–Ω–¥–æ–º –ø–æ–π–¥–µ—Ç –ª–∏ —É–±–æ—Ä—â–∏–∫ –≤ 6 –Ω–æ—á–∏.

                            go_—Årazy = True

                        else:

                            print('m')
                            time.sleep(3)
                            go_—Årazy = False
                            print(timer)


            elif night == 3: #–ù–æ—á—å 3 (–ë–∞—Ä–º–µ–Ω)
                    go_crazy = False
                    go_cleaner = False
                    go_hoverboard = False
                    if timer >= 541: #–†–∞–Ω–¥–æ–º –¥–æ 1 —á–∞—Å–∞ –Ω–æ—á–∏(–≤ –∏–≥—Ä–µ) –ø–æ–π–¥–µ—Ç –ª–∏ –±–∞—Ä–º–µ–Ω –∏–ª–∏ –Ω–µ—Ç(—à–∞–Ω—Å –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏–π)
                        
                        time.sleep(5)
                        a = randint(1, 100)
                        
                        if a == 50:
                            
                            go_barmen = True
                            print(go_barmen)

                        else: 

                            print(timer)

                    elif timer <= 540 and timer > 450: #–†–∞–Ω–¥–æ–º –ø–æ–π–¥–µ—Ç –ª–∏ –±–∞—Ä–º–µ–Ω –≤ —á–∞—Å –Ω–æ—á–∏.
                        
                        time.sleep(5)
                        a = randint(1, 5)
                        
                        if a == 2 or a == 3:
                            
                            go_barmen = True
                            print(go_barmen)

                        else:
                            
                            print('z')
                            time.sleep(5)
                            go_barmen = False
                            print(timer)

                    elif timer <= 450 and timer > 360: #–†–∞–Ω–¥–æ–º –ø–æ–π–¥–µ—Ç –ª–∏ –±–∞—Ä–º–µ–Ω –≤ 2 –Ω–æ—á–∏.

                        time.sleep(5)
                        a = randint(1, 5)

                        if a == 2 or 3:

                            go_barmen = True

                        else:

                            time.sleep(5)
                            a = randint(1, 4)

                            if a == 2 or a == 3:

                                go_barmen == True
                                print(go_barmen)

                            else:

                                print('i')
                                go_barmen = False
                                print(timer)

                    elif timer <= 360 and timer > 80: #–†–∞–Ω–¥–æ–º –ø–æ–π–¥–µ—Ç –ª–∏ –±–∞—Ä–º–µ–Ω –≤ 3, 4, 5 –Ω–æ—á–∏.

                        time.sleep(5)
                        a = randint(1, 5)

                        if a == 2 or a == 3:

                            go_barmen = True
                            print(go_barmen)

                        else:

                            print('f')
                            time.sleep(5)
                            go_barmen = False
                            print(timer)

                    elif timer <= 80:

                        time.sleep(5)
                        a = randint(1, 4)

                        if a == 2 or a == 3 or a == 4: #–†–∞–Ω–¥–æ–º –ø–æ–π–¥–µ—Ç –ª–∏ –±–∞—Ä–º–µ–Ω –≤ 6 –Ω–æ—á–∏.

                            go_barmen = True

                        else:

                            print('m')
                            time.sleep(5)
                            go_barmen = False
                            print(timer)


            elif night  == 4: #–ù–æ—á—å 4 (–•–æ–≤–µ—Ä–±–æ—Ä–¥)
                    
                    go_crazy = False
                    go_cleaner = False
                    go_barmen = False

                    if timer >= 541: #–†–∞–Ω–¥–æ–º –¥–æ 1 —á–∞—Å–∞ –Ω–æ—á–∏(–≤ –∏–≥—Ä–µ) –ø–æ–π–¥–µ—Ç –ª–∏ —Ö–æ–≤–µ—Ä–±–æ—Ä–¥ –∏–ª–∏ –Ω–µ—Ç(—à–∞–Ω—Å –æ—á–µ–Ω—å –º–∞–ª–µ–Ω—å–∫–∏–π)
                            
                            time.sleep(5)
                            a = randint(1, 100)
                            
                            if a == 50:
                                
                                go_hoverboard = True
                                print(go_hoverboard) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

                            else: 

                                print(timer) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

                    elif timer <= 540 and timer > 450: #–†–∞–Ω–¥–æ–º –ø–æ–π–¥–µ—Ç –ª–∏ –±–∞—Ä–º–µ–Ω –≤ —á–∞—Å –Ω–æ—á–∏.
                        
                        time.sleep(5)
                        a = randint(1, 5)
                        
                        if a == 2 or a == 3:
                            
                            go_hoverboard = True
                            print(go_hoverboard) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

                        else:
                            
                            print('z') #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                            time.sleep(5)
                            go_hoverboard = False
                            print(timer) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

                    elif timer <= 450 and timer > 360: #–†–∞–Ω–¥–æ–º –ø–æ–π–¥–µ—Ç –ª–∏ –±–∞—Ä–º–µ–Ω –≤ 2 –Ω–æ—á–∏.

                        time.sleep(5)
                        a = randint(1, 5)

                        if a == 2 or 3:

                            go_hoverboard = True
                            print(go_hoverboard) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

                        else:

                            time.sleep(5)
                            a = randint(1,4)

                            if a == 2 or a == 3:

                                go_hoverboard == True
                                print(go_hoverboard) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

                            else:

                                print('i')
                                go_hoverboard = False
                                print(timer) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

                    elif timer <= 360 and timer > 80: #–†–∞–Ω–¥–æ–º –ø–æ–π–¥–µ—Ç –ª–∏ –±–∞—Ä–º–µ–Ω –≤ 3, 4, 5 –Ω–æ—á–∏.

                        time.sleep(5)
                        a = randint(1, 5)

                        if a == 2 or a == 3:

                            go_barmen = True
                            print(go_hoverboard) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

                        else:

                            print('f') #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                            time.sleep(5)
                            go_hoverboard = False
                            print(timer) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

                    elif timer <= 80:

                        time.sleep(5)
                        a = randint(1, 4)

                        if a == 2 or a == 3 or a == 4: #–†–∞–Ω–¥–æ–º –ø–æ–π–¥–µ—Ç –ª–∏ —Ö–æ–≤–µ—Ä–±–æ—Ä–¥ –≤ 6 –Ω–æ—á–∏.

                            go_hoverboard = True
                            print(go_hoverboard) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

                        else:

                            print('m') #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                            time.sleep(5)
                            go_hoverboard = False
                            print(timer) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                    elif night  == 5: #–ù–æ—á—å 5 (–¢–µ—Ä–º–∏–Ω–∞—Ç–æ—Ä)
                        go_crazy = False
                        go_cleaner = False
                        go_barmen = False
                        go_terminator
                        if timer >= 541: 
                                
                                time.sleep(5)
                                a = randint(1, 100)
                                
                                if a == 50:
                                    
                                    go_hoverboard = True
                                    print(go_terminator) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

                                else: 

                                    print(timer) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

                        elif timer <= 540 and timer > 450:  
                            
                            time.sleep(5)
                            a = randint(1, 5)
                            
                            if a == 2 or a == 3:
                                
                                go_terminator= True
                                print(go_terminator) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

                            else:
                                
                                print('z') #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                                time.sleep(5)
                                go_terminator = False
                                print(timer) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

                        elif timer <= 450 and timer > 360: 

                            time.sleep(5)
                            a = randint(1, 5)

                            if a == 2 or 3:

                                go_terminator = True
                                print(go_terminator) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

                            else:

                                time.sleep(5)
                                a = randint(1,4)

                                if a == 2 or a == 3:

                                    go_terminator == True
                                    print(go_terminator) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

                                else:

                                    print('i')
                                    go_terminator = False
                                    print(timer) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

                        elif timer <= 360 and timer > 80: #–†–∞–Ω–¥–æ–º –ø–æ–π–¥–µ—Ç –ª–∏ –±–∞—Ä–º–µ–Ω –≤ 3, 4, 5 –Ω–æ—á–∏.

                            time.sleep(5)
                            a = randint(1, 5)

                            if a == 2 or a == 3:

                                go_barmen = True
                                print(go_hoverboard) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

                            else:

                                print('f') #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                                time.sleep(5)
                                go_hoverboard = False
                                print(timer) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

                        elif timer <= 80:

                            time.sleep(5)
                            a = randint(1, 4)

                            if a == 2 or a == 3 or a == 4: #–†–∞–Ω–¥–æ–º –ø–æ–π–¥–µ—Ç –ª–∏ —Ö–æ–≤–µ—Ä–±–æ—Ä–¥ –≤ 6 –Ω–æ—á–∏.

                                go_hoverboard = True
                                print(go_hoverboard) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è

                            else:

                                print('m') #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
                                time.sleep(5)
                                go_hoverboard = False
                                print(timer) #–ù—É–∂–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è





if __name__ == '__main__': #–ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª –∑–∞–ø—É—â–µ–Ω
    #–í—ã—Å—Ç–∞–≤–ª—è–µ–º –±–∞–∑–æ–≤—ã–µ –∑–Ω–∞—á–∞–Ω–∏—è –¥–ª—è —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∂–∏–º–∞

    db_manager.update_coins("test", '100')
    db_manager.update_assortiment("Tablet", '1')
    db_manager.update_assortiment("Battery", '4')

    polling_thread = threading.Thread(target=bot_thread)
    polling_timer = threading.Thread(target=timer_thread)
    polling_timings = threading.Thread(target=timing_thread)

    polling_timer.start()
    polling_timings.start()
    polling_thread.start()
    
